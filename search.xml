<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[jenkins-registry持续集成-jenkins-registry安装与数据迁移(一)]]></title>
      <url>http://www.troylc.cc/docker/2017/01/08/Docker05registry-jenkins.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近项目中也是一直在用jenkins做持续集成，正好更新jenkins为最新版本及迁移原来的老环境。顺手把它记录下来，和大家一起分享（本文同样适用新入手jenkins的同学）。 </p>
<h3 id="持续集成原理"><a href="#持续集成原理" class="headerlink" title="持续集成原理"></a>持续集成原理</h3><p>持续集成, 简称CI（continuous integration）.</p>
<ul>
<li>CI作为敏捷开发重要的一步，其目的在于让产品快速迭代的同时，尽可能保持高质量.</li>
<li>CI一种可以增加项目可见性，降低项目失败风险的开发实践。其每一次代码更新，都要通过自动化测试来检测代码和功能的正确性，只有通过自动测试的代码才能进行后续的交付和部署.</li>
<li>CI 是团队成员间（产研测）更好地协调工作，更好的适应敏捷迭代开发，自动完成减少人工干预，保证每个时间点上团队成员提交的代码都能成功集成的，可以很好的用于对各种WEB、APP项目的打包.  </li>
</ul>
<p>Jenkins<br><a href="https://jenkins.io/index.html" target="_blank" rel="external">Jenkins</a>是一个用Java编写的开源的持续集成工具，提供了软件开发的持续集成服务，可监控并触发持续重复的工作，具有开源，支持多平台和插件扩展，安装简单，界面化管理等特点。</p>
<p>附网上jenkins持续交付流程图<br><img src="http://note.youdao.com/yws/public/resource/f63aea77ab66b196c469ff330cbff084/xmlnote/CF1A4905662247D79B3FDA6FD00857DE/19125" alt="jenkins持续集成"><br>持续集成，持续交付各个阶段所使用的一些典型工具的使用，以及在各个阶段中的相关团队的相关活动，以下图为典型的DevOps相关的活动<br><img src="http://note.youdao.com/yws/public/resource/f63aea77ab66b196c469ff330cbff084/xmlnote/6E94BDCEE7DF4243AF6DA8C9AC831B1C/19140" alt="jenkins持续集成2"></p>
<h3 id="docker环境安装"><a href="#docker环境安装" class="headerlink" title="docker环境安装"></a>docker环境安装</h3><p>参考：<a href="http://www.troylc.cc/docker/2017/01/05/docker04ininstall.html">docker系列-docker、docker-compse最新版本安装及版本升级</a></p>
<h3 id="jenkins环境安装"><a href="#jenkins环境安装" class="headerlink" title="jenkins环境安装"></a>jenkins环境安装</h3><p>首页在有联网条件下的docker环境中下载jenkins最新版本的docker镜像</p>
<h4 id="下载jenkins镜像"><a href="#下载jenkins镜像" class="headerlink" title="下载jenkins镜像"></a>下载jenkins镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">[root@registry-jenkins ~]# docker pull jenkins:2.32.1-alpine</div><div class="line">2.32.1-alpine: Pulling from library/jenkins</div><div class="line">b7f33cc0b48e: Pull complete </div><div class="line">43a564ae36a3: Pull complete </div><div class="line">b294f0e7874b: Downloading [=========================================&gt;         ] 41.12 MB/49.36 MB</div><div class="line">63c7a703a76a: Downloading [===========&gt;                                       ] 5.144 MB/23.26 MB</div><div class="line">1948a77ff7cc: Download complete </div><div class="line">ceb220f57d17: Downloading [=========================&gt;                         ] 35.11 MB/69.93 MB</div><div class="line">d0fbbc51c7ae: Waiting </div><div class="line">6eee39234906: Waiting </div><div class="line">6eee39234906: Pulling fs layer </div><div class="line">[root@registry-jenkins ~]# docker pull registry</div><div class="line">latest: Pulling from library/registry</div><div class="line">b7f33cc0b48e: Pull complete </div><div class="line">43a564ae36a3: Pull complete </div><div class="line">b294f0e7874b: Downloading [=========================================&gt;         ] 41.12 MB/49.36 MB</div><div class="line">63c7a703a76a: Downloading [===========&gt;                                       ] 5.144 MB/23.26 MB</div><div class="line">1948a77ff7cc: Download complete </div><div class="line">6eee39234906: Pulling fs layer </div><div class="line"></div><div class="line">[root@registry-jenkins ~]# docker images</div><div class="line">REPOSITORY                   TAG                    IMAGE ID            CREATED             SIZE</div><div class="line">jenkins                      2.32.1-alpine          0c0c0a437b20        10 days ago         263.7 MB</div><div class="line">registry                     latest                 182810e6ba8c        10 days ago         37.6 MB</div><div class="line">nginx                        latest                 abf312888d13        5 weeks ago         181.5 MB</div><div class="line">mysql                        latest                 d9124e6c552f        6 weeks ago         383.4 MB</div><div class="line">tomcat                       8.0.39-jre8-alpine     fbb6a04c1245        7 weeks ago         135.4 MB</div><div class="line">java                         openjdk-8-jdk-alpine   d991edd81416        7 weeks ago         145 MB</div><div class="line">tomcat                       8.5.5-jre8-alpine      af393862df5a        4 months ago        135 MB</div><div class="line">redis                        latest                 4f5f397d4b7c        10 months ago       177.5 MB</div><div class="line">toptomcat                    latest                 ce8c4307d74c        14 months ago       395.5 MB</div><div class="line">topsecnginx                  latest                 bd299f0f0516        14 months ago       223.4 MB</div></pre></td></tr></table></figure>
<h4 id="加载器安装"><a href="#加载器安装" class="headerlink" title="加载器安装"></a>加载器安装</h4><p>==注意：==<br>一般由于docker hub是国外的网站，下载镜像非常慢，各位可以用国内的加载器，这里我推荐两种加载器：</p>
<ol>
<li>daocloud加载器</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://69693d08.m.daocloud.io</div></pre></td></tr></table></figure>
<p>该脚本可以将 –registry-mirror 加入到你的 Docker 配置文件 /etc/default/docker 中。适用于 Ubuntu14.04、Debian、CentOS6 、CentOS7、Fedora、Arch Linux、openSUSE Leap 42.1，具体地址为 <a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="external">https://www.daocloud.io/mirror#accelerator-doc</a>其他版本可能有细微不同。更多详情请<a href="http://guide.daocloud.io/dcs/daocloud-9153151.html" target="_blank" rel="external">访问文档</a>。</p>
<ol>
<li>阿里云加载器  </li>
</ol>
<p>阿里云加载器是你用阿里云账号登录后，在产品与服务中有一个加速器，点击加速器出现如下内容：<br>他会给没一个账号弄一个专属的加载器：我的是 专属加速器地址： <a href="https://1i186hp0.mirror.aliyuncs.com" target="_blank" rel="external">https://1i186hp0.mirror.aliyuncs.com</a></p>
<p>安装或升级Docker</p>
<p>您可以通过阿里云的镜像仓库下载： mirrors.aliyun.com/help/docker-engine</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div></pre></td></tr></table></figure>
<p>配置Docker加速器</p>
<p>您可以使用如下的脚本将mirror的配置添加到docker daemon的启动参数中。<br><strong>系统要求 CentOS 7 以上，Docker 1.9 以上。</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo cp -n /lib/systemd/system/docker.service /etc/systemd/system/docker.service</div><div class="line">sudo sed -i &quot;s|ExecStart=/usr/bin/docker daemon|ExecStart=/usr/bin/docker daemon --registry-mirror=https://1i186hp0.mirror.aliyuncs.com|g&quot; /etc/systemd/system/docker.service</div><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo service docker restart</div></pre></td></tr></table></figure>
<h4 id="通过-docker-compose运行jenkins"><a href="#通过-docker-compose运行jenkins" class="headerlink" title="通过 docker-compose运行jenkins"></a>通过 docker-compose运行jenkins</h4><h5 id="docker-compose文件内容："><a href="#docker-compose文件内容：" class="headerlink" title="docker-compose文件内容："></a>docker-compose文件内容：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">[root@registry-jenkins ~]<span class="comment"># vim docker-compose.yml</span></div><div class="line"><span class="comment">#docker run -p 8080:8080 -p 50000:50000 -v /your/home:/var/jenkins_home jenkins</span></div><div class="line">jenkins:</div><div class="line">  image: jenkins:2.32.1-alpine</div><div class="line">  container_name: jenkins</div><div class="line">  ports:</div><div class="line">    - <span class="string">"8080:8080"</span></div><div class="line">    - <span class="string">"50000:50000"</span></div><div class="line">  volumes:</div><div class="line">    - /opt/data/jenkins_home:/var/jenkins_home</div><div class="line">  extra_hosts: </div><div class="line">    - <span class="string">"repo.topsec.com:172.19.6.42"</span></div><div class="line">  user: root</div><div class="line">  restart: always</div><div class="line"><span class="comment">#docker run -d --restart=always -p 5000:5000 -v /opt/devdata/registry:/var/lib/registry --name devregistry registry</span></div><div class="line">registry:</div><div class="line">  image: registry</div><div class="line">  container_name: devregistry</div><div class="line">  ports:</div><div class="line">    - <span class="string">"5000:5000"</span></div><div class="line">  volumes:</div><div class="line">    - /opt/devdata/registry:/var/lib/registry</div><div class="line">  restart: always</div><div class="line">  </div><div class="line">[root@registry-jenkins ~]<span class="comment"># docker-compose up -d</span></div><div class="line">[root@registry-jenkins devdata]<span class="comment"># docker-compose ps</span></div><div class="line">   Name                  Command               State                        Ports                       </div><div class="line">-------------------------------------------------------------------------------------------------------</div><div class="line">devregistry   /entrypoint.sh /etc/docker ...   Up      0.0.0.0:5000-&gt;5000/tcp                           </div><div class="line">jenkins       /bin/tini -- /usr/<span class="built_in">local</span>/bi ...   Up      0.0.0.0:50000-&gt;50000/tcp, 0.0.0.0:8080-&gt;8080/tcp</div></pre></td></tr></table></figure>
<h5 id="迁移jenkins工作内容"><a href="#迁移jenkins工作内容" class="headerlink" title="迁移jenkins工作内容"></a>迁移jenkins工作内容</h5><p>如果是之前有运行了老版本的jenkins持续集成的内容，docker环境会有一个volumes的映射目录，只有从老的jenkins映射的目录，打包，拷贝到新的指定目录，然后在docker-compose.yml文件中在volumes中指定你拷贝的新的目录就行。后面的操作和上面一样。</p>
<p>registry和jenkns类似，都有一个挂载的目录存储着镜像内容，只有将该文件下的内容拷贝到新的环境目录，然后在docker-compose文件指定目录位置就行。如上 docker-compose.yml文件中的内容</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://www.dockerinfo.net/?s=registry" target="_blank" rel="external">docker registry v2 认证服务器</a><br><a href="http://www.dockerinfo.net/2457.html" target="_blank" rel="external">从零开始搭建Jenkins+Docker自动化集成环境</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker系列-docker、docker-compse最新版本安装及版本升级]]></title>
      <url>http://www.troylc.cc/docker/2017/01/05/docker04ininstall.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一直由于工作的原因，在2016年下半年几乎停止了更新自己的博客，新年依始，勿忘初心，重新更新了自己的博客空间主题，虽有不足，总算是顺利完成了更新。 希望2017更进一步。<br>以下为docker1.12.x和docker-compose1.9的安装</p>
<h4 id="环境信息"><a href="#环境信息" class="headerlink" title="- 环境信息"></a>- <strong>环境信息</strong></h4><table>
<thead>
<tr>
<th>操作系统</th>
<th>软件</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>centos7.2</td>
<td>docker engine 1.12</td>
<td>Docker是一个能够把开发的应用程序自动部署到容器的开源引擎</td>
</tr>
<tr>
<td>centos7.2</td>
<td>docker-compose 1.9</td>
<td>是 Docker 官方编排（Orchestration）项目之一，负责快速在集群中部署分布式应用</td>
</tr>
</tbody>
</table>
<h4 id="系统环境安装"><a href="#系统环境安装" class="headerlink" title="- 系统环境安装"></a>- <strong>系统环境安装</strong></h4><p>升级这台主机的内核到最新版本。为安装最新的docker版本<br>升级内核(在连网的环境下)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev ~]<span class="comment"># rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></div><div class="line">[root@dmpdev ~]<span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span></div><div class="line">[root@dmpdev ~]<span class="comment"># yum --enablerepo=elrepo-kernel install kernel-ml</span></div></pre></td></tr></table></figure>
<p>也可以通过此<a href="http://pkgs.org/download/kernel-devel网站手工下载安装" target="_blank" rel="external">http://pkgs.org/download/kernel-devel网站手工下载安装</a><br>重要：目前内核还是默认的版本，如果在这一步完成后你就直接reboot了，重启后使用的内核版本还是默认的3.10，不会使用新的4.X以上，想修改启动的顺序，需要进行下一步<br>查看默认启动顺序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev ~]# awk -F\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfg</div></pre></td></tr></table></figure>
<p>默认启动的顺序是从0开始，但我们新内核是从头插入（目前位置在0，而3.10的是在1），所以需要选择0，如果想生效最新的内核，需要</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev ~]# grub2-set-default 0   我这里是1</div></pre></td></tr></table></figure>
<h4 id="docker环境安装"><a href="#docker环境安装" class="headerlink" title="- docker环境安装"></a>- <strong>docker环境安装</strong></h4><h5 id="1-确认旧的docker相关的组件并删除"><a href="#1-确认旧的docker相关的组件并删除" class="headerlink" title="1. 确认旧的docker相关的组件并删除"></a>1. 确认旧的docker相关的组件并删除</h5><p>如果你的机器上有用centos简易安装方式yum install docker安装的各种docker组件。安装1.12之前先把它们删掉吧，不然后面有可能还是会提示你删除的。（适合想对docker进行升级的情况，先删除，再安装最新的，放心删除docker engine,他不会删除你本地的镜像和容器，一但是重新安装好后，原来的镜像容器同样可以用，这点已经实验了，大家放心删除）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev ~]# rpm -qa |grep docker</div><div class="line">docker-selinux-1.10.3-44.el7.centos.x86_64</div><div class="line">docker-common-1.10.3-44.el7.centos.x86_64</div><div class="line">docker-forward-journald-1.10.3-44.el7.centos.x86_64</div><div class="line">docker-1.10.3-44.el7.centos.x86_64</div><div class="line">[root@dmpdev ~]# yum -y remove docker-selinux-1.10.3-44.el7.centos.x86_64</div><div class="line">[root@dmpdev ~]# yum -y remove docker-common-1.10.3-44.el7.centos.x86_64</div><div class="line">[root@dmpdev ~]# yum -y remove docker-forward-journald-1.10.3-44.el7.centos.x86_64</div><div class="line">[root@dmpdev ~]# yum -y remove docker-1.10.3-44.el7.centos.x86_64</div></pre></td></tr></table></figure>
<h5 id="2-安装docker-1-12-x版本"><a href="#2-安装docker-1-12-x版本" class="headerlink" title="2. 安装docker 1.12.x版本"></a>2. 安装docker 1.12.x版本</h5><h6 id="设定docker的Yum源来安装"><a href="#设定docker的Yum源来安装" class="headerlink" title="- 设定docker的Yum源来安装"></a>- 设定docker的Yum源来安装</h6><p>docker缺省的Yum库使用的是main，基本上是稳定的版本。而不是最新版本的docker。在centos上安装只需要设定为experimental。将其baseurl设定为<a href="https://yum.dockerproject.org/repo/experimental/centos/7/即可。以后升到1.99估计也可以用同样的花招抢先试用吧。以下为设定方式：" target="_blank" rel="external">https://yum.dockerproject.org/repo/experimental/centos/7/即可。以后升到1.99估计也可以用同样的花招抢先试用吧。以下为设定方式：</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev ~]# cat &gt; /etc/yum.repos.d/docker.repo &lt;&lt;-EOF</div><div class="line">[dockerrepo]</div><div class="line">name=Docker Repository</div><div class="line">baseurl=https://yum.dockerproject.org/repo/experimental/centos/7/</div><div class="line">enabled=1</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=https://yum.dockerproject.org/gpg</div><div class="line">EOF</div><div class="line"></div><div class="line">[root@dmpdev ~]# yum -y install docker-engine</div><div class="line">省略安装内容.......</div><div class="line">已安装:</div><div class="line">  docker-engine.x86_64 0:1.12.1-1.el7.centos                                                                                                    </div><div class="line">作为依赖被安装:</div><div class="line">  audit-libs-python.x86_64 0:2.4.1-5.el7    checkpolicy.x86_64 0:2.1.12-6.el7    docker-engine-selinux.noarch 0:1.12.1-1.el7.centos libcgroup.x86_64 0:0.41-8.el7  libseccomp.x86_64 0:2.2.1-1.el7   </div><div class="line">  libsemanage-python.x86_64 0:2.1.10-18.el7 libtool-ltdl.x86_64 0:2.4.2-21.el7_2 policycoreutils-python.x86_64 0:2.2.5-20.el7       python-IPy.noarch 0:0.75-6.el7 setools-libs.x86_64 0:3.3.7-46.el7</div><div class="line">[root@dmpdev ~]# systemctl start docker 启动 docker</div><div class="line">[root@dmpdev ~]# systemctl enable docker 设置开机启动</div><div class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</div></pre></td></tr></table></figure>
<h6 id="通过CURL或者WGET运行bash命令来安装："><a href="#通过CURL或者WGET运行bash命令来安装：" class="headerlink" title="- 通过CURL或者WGET运行bash命令来安装："></a>- 通过CURL或者WGET运行bash命令来安装：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev ~]# curl -fsSL https://get.docker.com/ | sh 或者 wget -qO- https://get.docker.com/ |sh</div><div class="line">[root@dmpdev ~]# systemctl restart docker</div><div class="line">[root@dmpdev ~]# docker version</div><div class="line">[root@dmpdev ~]# docker version</div><div class="line">Client:</div><div class="line"> Version:      1.12.3</div><div class="line"> API version:  1.24</div><div class="line"> Go version:   go1.6.3</div><div class="line"> Git commit:   6b644ec</div><div class="line"> Built:        </div><div class="line"> OS/Arch:      linux/amd64</div><div class="line"></div><div class="line">Server:</div><div class="line"> Version:      1.12.3</div><div class="line"> API version:  1.24</div><div class="line"> Go version:   go1.6.3</div><div class="line"> Git commit:   6b644ec</div><div class="line"> Built:        </div><div class="line"> OS/Arch:      linux/amd64</div><div class="line"> [root@dmpdev ~]# systemctl start docker 启动 docker</div><div class="line">[root@dmpdev ~]# systemctl enable docker 设置开机启动</div><div class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</div></pre></td></tr></table></figure>
<h4 id="docker-compose环境安装"><a href="#docker-compose环境安装" class="headerlink" title="- docker-compose环境安装"></a>- docker-compose环境安装</h4><p>Docker Compose是一个一次部署多个容器的简单但是非常必要的工具，</p>
<h5 id="PIP安装"><a href="#PIP安装" class="headerlink" title="- PIP安装"></a>- PIP安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev ~]# yum install python-pip -y</div><div class="line">[root@dmpdev ~]# pip install docker-compose</div><div class="line">[root@dmpdev ~]# docker-compose -version</div><div class="line">docker-compose version 1.9.0, build 2585387</div></pre></td></tr></table></figure>
<h5 id="curl下载二进制可执行文件的方式-推荐"><a href="#curl下载二进制可执行文件的方式-推荐" class="headerlink" title="- curl下载二进制可执行文件的方式(推荐)"></a>- curl下载二进制可执行文件的方式(推荐)</h5><p>安装Docker-compose   <a href="https://github.com/docker/compose/releases" target="_blank" rel="external">https://github.com/docker/compose/releases</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev ~]# curl -L &quot;https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</div><div class="line">[root@dmpdev ~]# chmod +x /usr/local/bin/docker-compose</div><div class="line">[root@dmpdev ~]# docker-compose -version</div><div class="line">docker-compose version 1.9.0, build 2585387</div></pre></td></tr></table></figure>
<h5 id="手工下载二进制方式-离线安装"><a href="#手工下载二进制方式-离线安装" class="headerlink" title="- 手工下载二进制方式(离线安装)"></a>- 手工下载二进制方式(离线安装)</h5><p>安装docker-compose<br>自己找一台能上网的机器，进入github网站的docker-compose代码仓库的releases，找到latest版本，手工下载 具体地址：<a href="https://github.com/docker/compose/releases/download/1.9.0/docker-compose-Darwin-x86_64" target="_blank" rel="external">https://github.com/docker/compose/releases/download/1.9.0/docker-compose-Darwin-x86_64</a>  </p>
<p>把下载的进制文件(docker-compose-Darwin-x86_64)通过工具拷贝到有docker环境的主机的/usr/local/bin/下，修改名称为docker-compose</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@dmpdev bin] mv docker-compose-Darwin-x86_64 docker-compose</div><div class="line">[root@dmpdev bin]# chmod +x /usr/local/bin/docker-compose</div><div class="line">[root@dmpdev bin]# docker-compose -version</div><div class="line">docker-compose version 1.9.0, build 2585387</div></pre></td></tr></table></figure>
<p>至此docker与docker-compose环境就已经安装完成。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker系列(三)Docker的图形化管理工具Shipyard]]></title>
      <url>http://www.troylc.cc/docker/2016/08/07/docker-03.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>启动两个虚机，都部署Docker Engine，然后再其中一台上安装shipyard ，管理两个Docker Engine，其中一个Engine 贴标签为dev ,一个为online，表明开发环境或线上环境<br>采用shipyard发布两个MySQL 实例，分别名字为MySQL-dev与MySQL-Online，在不同的Docker上，截图说明操作过程</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>1.两台Vmware虚拟机(网络模式为nat)：<br>(dev)192.168.253.129(centos7)<br>(online)192.168.253.134(centos7)<br>2.升级这两台（192.168.253.134、192.168.253.129）主机的内核到最新版本。为安装最新的docker版本<br>升级内核(在连网的环境下)<br>[root@localhost bin]# rpm –import <a href="https://www.elrepo.org/RPM-GPG-KEY-elrepo.org" target="_blank" rel="external">https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</a><br>[root@localhost bin]# rpm -Uvh <a href="http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm" target="_blank" rel="external">http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</a><br>[root@localhost bin]# yum –enablerepo=elrepo-kernel install kernel-ml<br>也可以通过此<a href="http://pkgs.org/download/kernel-devel网站手工下载安装" target="_blank" rel="external">http://pkgs.org/download/kernel-devel网站手工下载安装</a><br>重要：目前内核还是默认的版本，如果在这一步完成后你就直接reboot了，重启后使用的内核版本还是默认的3.10，不会使用新的4.3，想修改启动的顺序，需要进行下一步<br>查看默认启动顺序<br>[root@localhost bin]# awk -F\’ ‘$1==”menuentry “ {print $2}’ /etc/grub2.cfg<br>默认启动的顺序是从0开始，但我们新内核是从头插入（目前位置在0，而3.10的是在1），所以需要选择0，如果想生效最新的内核，需要<br>[root@localhost bin]# grub2-set-default 0   我这里是1<br><img src="/images/docker/3-1.png" alt="nh"><br>3.修改两台主机的主机名（这一步重要，如果不修改，后续在创建容器互联时两主机间的容器不能通信）：<br>在192.168.253.129修改主机名并重启<br>[root@localhost bin]# hostnamectl set-hostname dev<br>[root@localhost bin]# reboot<br>在192.168.253.134修改主机名并重启<br>[root@localhost bin]# hostnamectl set-hostname online<br>[root@localhost bin]# reboot </p>
<h4 id="安装shipyard，通过官方的脚本安装"><a href="#安装shipyard，通过官方的脚本安装" class="headerlink" title="安装shipyard，通过官方的脚本安装"></a>安装shipyard，通过官方的脚本安装</h4><p>1.首次部署脚本</p>
<p>[root@dev ~]# curl -sSL <a href="https://dockerclub.net/deploy" target="_blank" rel="external">https://dockerclub.net/deploy</a> | bash -s<br>ACTION: 可以使用的指令 (deploy, upgrade, node, remove)<br>DISCOVERY: 集群系统采用Swarm进行采集和管理(在节点管理中可以使用‘node’)<br>IMAGE: 镜像，默认使用shipyard的镜像<br>PREFIX: 容器名字的前缀<br>SHIPYARD_ARGS: 容器的常用参数<br>TLS_CERT_PATH: TLS证书路径<br>PORT: 主程序监听端口 (默认端口: 8080)<br>PROXY_PORT: 代理端口 (默认: 2375) </p>
<p>运行这条命令会下载依赖的镜像，国内环境估计无法下载，我用的是阿里云的加载器。至于怎么添加，登录阿里云上去看就知道了。提供下地址：<a href="http://console.d.aliyun.com/index2.html/?spm=0.0.0.0.Xx1dX0#/docker/booster" target="_blank" rel="external">http://console.d.aliyun.com/index2.html/?spm=0.0.0.0.Xx1dX0#/docker/booster</a><br>上面命令效果如下：<br><img src="/images/docker/3-2.png" alt="nh"><br>我这肯定是已经下载过了依赖的镜像，所以没有提示下载镜像操作。</p>
<p>2.增加一个部署节点<br>shipyard节点部署脚本将自动的安装key/value存储系统（etcd系统）。增加一个节点到swarm集群，你可以使用以下的节点部署脚本<br>[root@online ~]  curl -sSL <a href="https://dockerclub.net/deploy" target="_blank" rel="external">https://dockerclub.net/deploy</a> | ACTION=node  DISCOVERY=etcd://192.168.253.129:4001 bash -s<br>注意：192.168.253.129这个ip地址你需要修改为你的首次初始化shipyard系统的主机地址<br><img src="/images/docker/3-3.png" alt="nh"><br>3.删除shipyard系统（运行上面两步，就可以对shipyard使用）<br>[root@online ~]$  curl -sSL <a href="https://dockerclub.net/deploy" target="_blank" rel="external">https://dockerclub.net/deploy</a> | ACTION=remove bash -s</p>
<h4 id="shipyard使用"><a href="#shipyard使用" class="headerlink" title="shipyard使用"></a>shipyard使用</h4><p>在浏览器中验证：<br>输入：<a href="http://localhost:8080/#/login（我这是做了vmware的虚拟IP映射，所以是localhost，admin/shipyard）" target="_blank" rel="external">http://localhost:8080/#/login（我这是做了vmware的虚拟IP映射，所以是localhost，admin/shipyard）</a><br>节点信息：<br><img src="/images/docker/3-4.png" alt="nh"><br>创建容器：<br><img src="/images/docker/3-5.png" alt="nh"><br><img src="/images/docker/3-6.png" alt="nh"><br>两个容器的运行结果，用官方的安装是一个swarm集群环境，好像一不能指定具体在那一个节点上运行。<br><img src="/images/docker/3-7.png" alt="nh"></p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker系列(二)使用Docker-Remote-API]]></title>
      <url>http://www.troylc.cc/docker/2016/07/31/docker-02.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Docker Remote API是一个取代远程命令行界面（rcli）的REST API。我们将使用命令行工具curl来处理url相关操作。curl可以发送请求、获取以及发送数据、检索信息。是docker自带的一个rest api 管理docker所有的操作都有对应的http rest API可供操作。下面简单说一下API的操作</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><table>
<thead>
<tr>
<th>主机</th>
<th>安装软件</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.253.129</td>
<td>安装docker，打开docker的API访问端口，主机</td>
</tr>
<tr>
<td>192.168.253.131</td>
<td>安装docker,远程通过API访问docker主机的客户端</td>
</tr>
</tbody>
</table>
<h4 id="配置-192-168-253-129-启动Remote-API"><a href="#配置-192-168-253-129-启动Remote-API" class="headerlink" title="配置(192.168.253.129)启动Remote API"></a>配置(192.168.253.129)启动Remote API</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># vim /usr/lib/systemd/system/docker.service</span></div><div class="line">[Unit]</div><div class="line">Description=Docker Application Container Engine</div><div class="line">Documentation=http://docs.docker.com</div><div class="line">After=network.target</div><div class="line">Wants=docker-storage-setup.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line">EnvironmentFile=-/etc/sysconfig/docker</div><div class="line">EnvironmentFile=-/etc/sysconfig/docker-storage</div><div class="line">EnvironmentFile=-/etc/sysconfig/docker-network</div><div class="line">Environment=GOTRACEBACK=crash</div><div class="line">ExecStart=/usr/bin/docker daemon -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock \</div><div class="line">          <span class="variable">$OPTIONS</span> \</div><div class="line">          <span class="variable">$DOCKER_STORAGE_OPTIONS</span> \</div><div class="line">          <span class="variable">$DOCKER_NETWORK_OPTIONS</span> \</div><div class="line">          <span class="variable">$ADD_REGISTRY</span> \</div><div class="line">          <span class="variable">$BLOCK_REGISTRY</span> \</div><div class="line">          <span class="variable">$INSECURE_REGISTRY</span></div><div class="line">LimitNOFILE=1048576</div><div class="line">LimitNPROC=1048576</div><div class="line">LimitCORE=infinity</div><div class="line">MountFlags=slave</div><div class="line">TimeoutStartSec=1min</div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<p>说明：<br>上面那句话，在不同的版本，设置有可能不一样，<br>重启docker<br>[root@localhost ~]# systemctl daemon-reload<br>[root@localhost ~]# systemctl restart docker</p>
<p>在本机(192.168.253.129)测试：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># docker -H 192.168.253.129:2375 images</span></div><div class="line">REPOSITORY                              TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</div><div class="line">myhub/mysql                             latest              d298157e388e        2 days ago          359.9 MB</div><div class="line">troylc/maven                            latest              0d244f5623e3        4 days ago          831.8 MB</div><div class="line">jenkins                                 latest              988e2e1b7418        9 days ago          707.8 MB</div><div class="line">registry                                latest              a8706c2bfd21        10 days ago         422.8 MB</div><div class="line">maven                                   latest              e6a340bb7d58        2 weeks ago         651.9 MB</div><div class="line">kubetomcat                              latest              d7b68af6b003        4 weeks ago         395.6 MB</div><div class="line">kubenginx                               latest              3820887c73d5        4 weeks ago         223.4 MB</div><div class="line">dmptomcat                               latest              82775047bc5e        6 weeks ago         395.5 MB</div><div class="line">toptomcat                               latest              06666482da5f        6 weeks ago         395.5 MB</div><div class="line">daocloud.io/daocloud/daocloud-toolset   latest              4a115833bcba        6 weeks ago         145.8 MB</div><div class="line">topsecssh                               latest              ac2ba2efcaf2        6 weeks ago         302.5 MB</div><div class="line">topsecnginx                             latest              0694365f1f87        6 weeks ago         223.4 MB</div><div class="line">tomcat                                  latest              e4b99e523705        7 weeks ago         347.8 MB</div><div class="line">mysql                                   latest              196db1908492        7 weeks ago         359.8 MB</div><div class="line">nginx                                   latest              5135500ec6a1        7 weeks ago         132.7 MB</div><div class="line">redis                                   latest              05babbd460f7        8 weeks ago         109.1 MB</div><div class="line">ubuntu                                  latest              a5a467fddcb8        8 weeks ago         187.9 MB</div><div class="line">centos                                  latest              ce20c473<span class="built_in">cd</span>8a        9 weeks ago         172.3 MB</div><div class="line">gcr.io/google_containers/pause          0.8.0               2c40b0526b63        8 months ago        241.7 kB</div></pre></td></tr></table></figure></p>
<p>在docker客户端机(192.168.253.130)上访问<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># docker -H 192.168.253.129:2375 images</span></div><div class="line">REPOSITORY                              TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</div><div class="line">myhub/mysql                             latest              d298157e388e        2 days ago          359.9 MB</div><div class="line">troylc/maven                            latest              0d244f5623e3        4 days ago          831.8 MB</div><div class="line">jenkins                                 latest              988e2e1b7418        9 days ago          707.8 MB</div><div class="line">registry                                latest              a8706c2bfd21        10 days ago         422.8 MB</div><div class="line">maven                                   latest              e6a340bb7d58        2 weeks ago         651.9 MB</div><div class="line">kubetomcat                              latest              d7b68af6b003        4 weeks ago         395.6 MB</div><div class="line">kubenginx                               latest              3820887c73d5        4 weeks ago         223.4 MB</div><div class="line">dmptomcat                               latest              82775047bc5e        6 weeks ago         395.5 MB</div><div class="line">toptomcat                               latest              06666482da5f        6 weeks ago         395.5 MB</div><div class="line">daocloud.io/daocloud/daocloud-toolset   latest              4a115833bcba        6 weeks ago         145.8 MB</div><div class="line">topsecssh                               latest              ac2ba2efcaf2        6 weeks ago         302.5 MB</div><div class="line">topsecnginx                             latest              0694365f1f87        6 weeks ago         223.4 MB</div><div class="line">tomcat                                  latest              e4b99e523705        7 weeks ago         347.8 MB</div><div class="line">mysql                                   latest              196db1908492        7 weeks ago         359.8 MB</div><div class="line">nginx                                   latest              5135500ec6a1        7 weeks ago         132.7 MB</div><div class="line">redis                                   latest              05babbd460f7        8 weeks ago         109.1 MB</div><div class="line">ubuntu                                  latest              a5a467fddcb8        8 weeks ago         187.9 MB</div><div class="line">centos                                  latest              ce20c473<span class="built_in">cd</span>8a        9 weeks ago         172.3 MB</div><div class="line">gcr.io/google_containers/pause          0.8.0               2c40b0526b63        8 months ago        241.7 kB</div><div class="line"></div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># docker -H 192.168.253.129:2375 run -d -p 80:80 -p 443:443 -p 5005:22 -v /home/nfs/data:/home/nfs/data --name dmpnginx nginxa</span></div><div class="line">997f216e969a72146b52f916ec20b2c4b892c4ea86acaa329cfd7028d974389</div><div class="line">[root@localhost ~]<span class="comment"># docker -H 192.168.253.129:2375 run -d -p 6379:6379 --name dmpredis redis</span></div><div class="line">f74477908b1767a35f8666b164c60399943bc08964423fea967a364fe79f3fea</div><div class="line">[root@localhost ~]<span class="comment"># docker -H 192.168.253.129:2375 ps -a</span></div><div class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED                  STATUS              PORTS           </div><div class="line">                                                 NAMESf74477908b17        redis               <span class="string">"/entrypoint.sh redis"</span>   Less than a second ago   Up 8 seconds        0.0.0.0:6379-&gt;63</div><div class="line">79/tcp                                           dmpredisa997f216e969        nginx               <span class="string">"nginx -g 'daemon off"</span>   Less than a second ago   Up 32 seconds       0.0.0.0:80-&gt;80/t</div><div class="line">cp, 0.0.0.0:443-&gt;443/tcp, 0.0.0.0:5005-&gt;22/tcp   dmpnginx</div></pre></td></tr></table></figure></p>
<p>docker宿主机上的操作，都可以通过（docker -H 192.168.253.129:2375 命令）的方式在其它docker客户机上操作。</p>
<h4 id="使用远程API构建镜像，运行容器，停止容器，删除容器等。"><a href="#使用远程API构建镜像，运行容器，停止容器，删除容器等。" class="headerlink" title="使用远程API构建镜像，运行容器，停止容器，删除容器等。"></a>使用远程API构建镜像，运行容器，停止容器，删除容器等。</h4><h5 id="使用info接入点-类似在宿主机上输入docker-info"><a href="#使用info接入点-类似在宿主机上输入docker-info" class="headerlink" title="使用info接入点(类似在宿主机上输入docker info)"></a>使用info接入点(类似在宿主机上输入docker info)</h5><p>curl <a href="http://192.168.253.129:2375/info" target="_blank" rel="external">http://192.168.253.129:2375/info</a><br><img src="/images/docker/clipboard.png" alt="dockerinfo"></p>
<h5 id="通过API获取远程docker主机上的镜像列表（类似于输入docker-images"><a href="#通过API获取远程docker主机上的镜像列表（类似于输入docker-images" class="headerlink" title="通过API获取远程docker主机上的镜像列表（类似于输入docker images)"></a>通过API获取远程docker主机上的镜像列表（类似于输入docker images)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># curl http://192.168.253.129:2375/images/json | python -mjson.tool</span></div><div class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</div><div class="line">                                 Dload  Upload   Total   Spent    Left  Speed</div><div class="line">100  5504    0  5504    0     0  43744      0 --:--:-- --:--:-- --:--:-- 44032</div><div class="line">[</div><div class="line">    &#123;</div><div class="line">        <span class="string">"Created"</span>: 1450623232,</div><div class="line">        <span class="string">"Id"</span>: <span class="string">"03b5e135264764e8b51a2f13f174e541ec3b8952d64762495e369cbb6ca9bdad"</span>,</div><div class="line">        <span class="string">"Labels"</span>: null,</div><div class="line">        <span class="string">"ParentId"</span>: <span class="string">"711aef0427ed0b2f77486a8c884294319b5aaca96c698d288a56d71148e6c0b4"</span>,</div><div class="line">        <span class="string">"RepoDigests"</span>: [],</div><div class="line">        <span class="string">"RepoTags"</span>: [</div><div class="line">            <span class="string">"myhub/education:latest"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"Size"</span>: 0,</div><div class="line">        <span class="string">"VirtualSize"</span>: 506413396</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="string">"Created"</span>: 1450376000,</div><div class="line">        <span class="string">"Id"</span>: <span class="string">"d298157e388ed0e6edd000a1234b3f84abbc1463a8f0ece6f2c539034a1e2573"</span>,</div><div class="line">        <span class="string">"Labels"</span>: null,</div><div class="line">        <span class="string">"ParentId"</span>: <span class="string">"ac704f6f8363d123001de9dd604e4cb1b476d012f0a809c4bf86e0cd60631753"</span>,</div><div class="line">        <span class="string">"RepoDigests"</span>: [],</div><div class="line">        <span class="string">"RepoTags"</span>: [</div><div class="line">            <span class="string">"myhub/mysql:latest"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"Size"</span>: 0,</div><div class="line">        <span class="string">"VirtualSize"</span>: 359871512</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="string">"Created"</span>: 1450215230,</div><div class="line">        <span class="string">"Id"</span>: <span class="string">"0d244f5623e3dc64d7f6428069c5dea3cd77299068b3ed2cb3d4eb56fd6f21b4"</span>,</div><div class="line">        <span class="string">"Labels"</span>: null,</div><div class="line">        <span class="string">"ParentId"</span>: <span class="string">"7605008fbf7d7470810df0c41f6422db254181f4f2eb2f02827f3fb62c9f79b3"</span>,</div><div class="line">        <span class="string">"RepoDigests"</span>: [],</div><div class="line">        <span class="string">"RepoTags"</span>: [</div><div class="line">            <span class="string">"troylc/maven:latest"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"Size"</span>: 87225781,</div><div class="line">        <span class="string">"VirtualSize"</span>: 831831039</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="string">"Created"</span>: 1449771164,</div><div class="line">        <span class="string">"Id"</span>: <span class="string">"988e2e1b74182c986873eb4b5ebce2f9dcc8f9ec156e41ec881aaa1074c7d489"</span>,</div><div class="line">        <span class="string">"Labels"</span>: null,</div><div class="line">        <span class="string">"ParentId"</span>: <span class="string">"d67b67d804fff392fd88e2ba601b6e3cafc117a89c8783f1bf0780b58bc19713"</span>,</div><div class="line">        <span class="string">"RepoDigests"</span>: [],</div><div class="line">        <span class="string">"RepoTags"</span>: [</div><div class="line">            <span class="string">"jenkins:latest"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"Size"</span>: 861,</div><div class="line">        <span class="string">"VirtualSize"</span>: 707786365</div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h5 id="获取指定的镜像："><a href="#获取指定的镜像：" class="headerlink" title="获取指定的镜像："></a>获取指定的镜像：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># curl http://192.168.253.129:2375/images/2c40b0526b6358710fd09e7b8c022429268cc61703b4777e528ac9d469a07ca1/json | python -mjson.tool  </span></div><div class="line"><span class="comment">#2c40b0526b6358710fd09e7b8c022429268cc61703b4777e528ac9d469a07ca1为镜像的ID号，可以通过上面的（curl http://192.168.253.129:2375/images/json | python -mjson.tool）查询获得。</span></div><div class="line">% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</div><div class="line">                                 Dload  Upload   Total   Spent    Left  Speed</div><div class="line">100  1661  100  1661    0     0  83337      0 --:--:-- --:--:-- --:--:-- 87421</div><div class="line">&#123;</div><div class="line">    <span class="string">"Architecture"</span>: <span class="string">"amd64"</span>,</div><div class="line">    <span class="string">"Author"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Comment"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Config"</span>: &#123;</div><div class="line">        <span class="string">"AttachStderr"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"AttachStdin"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"AttachStdout"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"Cmd"</span>: null,</div><div class="line">        <span class="string">"Domainname"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Entrypoint"</span>: [</div><div class="line">            <span class="string">"/pause"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"Env"</span>: [</div><div class="line">            <span class="string">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"ExposedPorts"</span>: null,</div><div class="line">        <span class="string">"Hostname"</span>: <span class="string">"d0eb442be084"</span>,</div><div class="line">        <span class="string">"Image"</span>: <span class="string">"56ba5533a2dbf18b017ed12d99c6c83485f7146ed0eb3a2e9966c27fc5a5dd7b"</span>,</div><div class="line">        <span class="string">"Labels"</span>: null,</div><div class="line">        <span class="string">"MacAddress"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"NetworkDisabled"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"OnBuild"</span>: [],</div><div class="line">        <span class="string">"OpenStdin"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"PublishService"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"StdinOnce"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"Tty"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"User"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"VolumeDriver"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Volumes"</span>: null,</div><div class="line">        <span class="string">"WorkingDir"</span>: <span class="string">""</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Container"</span>: <span class="string">"c63e747118f6582698545c10277ce8412088258b62601908ed5f0f2accfeb2b3"</span>,</div><div class="line">    <span class="string">"ContainerConfig"</span>: &#123;</div><div class="line">        <span class="string">"AttachStderr"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"AttachStdin"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"AttachStdout"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"Cmd"</span>: [</div><div class="line">            <span class="string">"/bin/sh"</span>,</div><div class="line">            <span class="string">"-c"</span>,</div><div class="line">            <span class="string">"#(nop) ENTRYPOINT [/pause]"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"Domainname"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Entrypoint"</span>: [</div><div class="line">            <span class="string">"/pause"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"Env"</span>: [</div><div class="line">            <span class="string">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"ExposedPorts"</span>: null,</div><div class="line">        <span class="string">"Hostname"</span>: <span class="string">"d0eb442be084"</span>,</div><div class="line">        <span class="string">"Image"</span>: <span class="string">"56ba5533a2dbf18b017ed12d99c6c83485f7146ed0eb3a2e9966c27fc5a5dd7b"</span>,</div><div class="line">        <span class="string">"Labels"</span>: null,</div><div class="line">        <span class="string">"MacAddress"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"NetworkDisabled"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"OnBuild"</span>: [],</div><div class="line">        <span class="string">"OpenStdin"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"PublishService"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"StdinOnce"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"Tty"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"User"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"VolumeDriver"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Volumes"</span>: null,</div><div class="line">        <span class="string">"WorkingDir"</span>: <span class="string">""</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Created"</span>: <span class="string">"2015-03-31T22:05:45.140369385Z"</span>,</div><div class="line">    <span class="string">"DockerVersion"</span>: <span class="string">"1.3.3"</span>,</div><div class="line">    <span class="string">"GraphDriver"</span>: &#123;</div><div class="line">        <span class="string">"Data"</span>: &#123;</div><div class="line">            <span class="string">"DeviceId"</span>: <span class="string">"763"</span>,</div><div class="line">            <span class="string">"DeviceName"</span>: <span class="string">"docker-253:0-34749673-2c40b0526b6358710fd09e7b8c022429268cc61703b4777e528ac9d469a07ca1"</span>,</div><div class="line">            <span class="string">"DeviceSize"</span>: <span class="string">"107374182400"</span></div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"devicemapper"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Id"</span>: <span class="string">"2c40b0526b6358710fd09e7b8c022429268cc61703b4777e528ac9d469a07ca1"</span>,</div><div class="line">    <span class="string">"Os"</span>: <span class="string">"linux"</span>,</div><div class="line">    <span class="string">"Parent"</span>: <span class="string">"56ba5533a2dbf18b017ed12d99c6c83485f7146ed0eb3a2e9966c27fc5a5dd7b"</span>,</div><div class="line">    <span class="string">"Size"</span>: 0,</div><div class="line">    <span class="string">"VirtualSize"</span>: 241656</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="通过API搜索镜像（类似于docker-search-查询的是docker-hub上的镜像）"><a href="#通过API搜索镜像（类似于docker-search-查询的是docker-hub上的镜像）" class="headerlink" title="通过API搜索镜像（类似于docker search:查询的是docker hub上的镜像）"></a>通过API搜索镜像（类似于docker search:查询的是docker hub上的镜像）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment">#  curl "http://192.168.253.129:2375/images/search?term=tomcat" | python -mjson.tool</span></div><div class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</div><div class="line">                                 Dload  Upload   Total   Spent    Left  Speed</div><div class="line">100  5130    0  5130    0     0   2513      0 --:--:--  0:00:02 --:--:--  2513</div><div class="line">[</div><div class="line">    &#123;</div><div class="line">        <span class="string">"description"</span>: <span class="string">"Apache Tomcat is an open source implementation of the Java Servlet and JavaServer Pages technologies"</span>,</div><div class="line">        <span class="string">"index_name"</span>: <span class="string">"docker.io"</span>,</div><div class="line">        <span class="string">"is_automated"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"is_official"</span>: <span class="literal">true</span>,</div><div class="line">        <span class="string">"is_trusted"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"name"</span>: <span class="string">"tomcat"</span>,</div><div class="line">        <span class="string">"registry_name"</span>: <span class="string">"docker.io"</span>,</div><div class="line">        <span class="string">"star_count"</span>: 390</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="string">"description"</span>: <span class="string">"Tomcat 7.0.57, 8080, \"admin/admin\""</span>,</div><div class="line">        <span class="string">"index_name"</span>: <span class="string">"docker.io"</span>,</div><div class="line">        <span class="string">"is_automated"</span>: <span class="literal">true</span>,</div><div class="line">        <span class="string">"is_official"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"is_trusted"</span>: <span class="literal">true</span>,</div><div class="line">        <span class="string">"name"</span>: <span class="string">"consol/tomcat-7.0"</span>,</div><div class="line">        <span class="string">"registry_name"</span>: <span class="string">"docker.io"</span>,</div><div class="line">        <span class="string">"star_count"</span>: 14</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="string">"description"</span>: <span class="string">"Tomcat 8.0.15, 8080, \"admin/admin\""</span>,</div><div class="line">        <span class="string">"index_name"</span>: <span class="string">"docker.io"</span>,</div><div class="line">        <span class="string">"is_automated"</span>: <span class="literal">true</span>,</div><div class="line">        <span class="string">"is_official"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"is_trusted"</span>: <span class="literal">true</span>,</div><div class="line">        <span class="string">"name"</span>: <span class="string">"consol/tomcat-8.0"</span>,</div><div class="line">        <span class="string">"registry_name"</span>: <span class="string">"docker.io"</span>,</div><div class="line">        <span class="string">"star_count"</span>: 12</div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h5 id="列出正在运行的容器（docker-ps-和docker-ps-a"><a href="#列出正在运行的容器（docker-ps-和docker-ps-a" class="headerlink" title="列出正在运行的容器（docker ps 和docker ps -a)"></a>列出正在运行的容器（docker ps 和docker ps -a)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment">#</span></div><div class="line">curl <span class="_">-s</span> <span class="string">"http://192.168.253.129:2375/containers/json"</span>| python -mjson.tool(docker ps)</div><div class="line">curl http://192.168.253.129:2375/containers/json?all=1 | python -mjson.tool(docker ps <span class="_">-a</span>)</div><div class="line">[</div><div class="line">    &#123;</div><div class="line">        <span class="string">"Command"</span>: <span class="string">"nginx"</span>,</div><div class="line">        <span class="string">"Created"</span>: 1436573284,</div><div class="line">        <span class="string">"Id"</span>: <span class="string">"e5cac80914cbd41f390b0892324d71505e50ac35485b89374030ec3e65ae470c"</span>,</div><div class="line">        <span class="string">"Image"</span>: <span class="string">"pengji/nginx:latest"</span>,</div><div class="line">        <span class="string">"Labels"</span>: &#123;&#125;,</div><div class="line">        <span class="string">"Names"</span>: [</div><div class="line">            <span class="string">"/website"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"Ports"</span>: [</div><div class="line">            &#123;</div><div class="line">                <span class="string">"IP"</span>: <span class="string">"0.0.0.0"</span>,</div><div class="line">                <span class="string">"PrivatePort"</span>: 80,</div><div class="line">                <span class="string">"PublicPort"</span>: 32768,</div><div class="line">                <span class="string">"Type"</span>: <span class="string">"tcp"</span></div><div class="line">            &#125;</div><div class="line">        ],</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"Up 57 seconds"</span></div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h5 id="创建与启动容器"><a href="#创建与启动容器" class="headerlink" title="创建与启动容器"></a>创建与启动容器</h5><p>创建容器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment">#  curl -X POST -H "Content-Type: application/json""http://192.168.253.129:2375/containers/create"-d '&#123;"Image":"pengji/nginx","Hostname":"remote_nginx"&#125;'</span></div><div class="line">&#123;<span class="string">"Id"</span>:<span class="string">"91784daaf79e87652142f9293dd82ef5716968db5b251ec761566759c0c529c6"</span>,<span class="string">"Warnings"</span>:null&#125;</div></pre></td></tr></table></figure></p>
<p>启动容器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment">#  curl -X POST -H "Content-Type: application/json""http://192.168.253.129:2375/containers/91784daaf79e87652142f9293dd82ef5716968db5b251ec761566759c0c529c6/start"-d '&#123;"PublishAllPorts":true&#125;'</span></div><div class="line">Usage of loopback devices is strongly discouraged forproduction use. Either use `--storage-opt dm.thinpooldev` or use `--storage-opt dm.no_warn_on_loop_devices=<span class="literal">true</span>` to suppress this warning.</div></pre></td></tr></table></figure></p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux系列(二)-linux相关系统进程查看及管理]]></title>
      <url>http://www.troylc.cc/linux/2016/07/23/linux-02.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>接上一篇linux文章，最近一直在学习linux相关的知识，之前也有看过相关对linux系统进程的文章，但一直没有总结和归纳。趁再次学习，把相关的知识记录下来。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>基于linux系统的相关进程管理命令有：ps、top、kill、</p>
<h4 id="ps命令："><a href="#ps命令：" class="headerlink" title="ps命令："></a>ps命令：</h4><ul>
<li><strong>ps aux 查看系统中所有进程，使用BSD操作系统格式</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@iZ23kbqqy35Z ~]<span class="comment"># ps aux</span></div><div class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</div><div class="line">root         1  0.0  0.0  19284  1508 ?        Ss    2015   0:01 /sbin/init</div><div class="line">root         2  0.0  0.0      0     0 ?        S     2015   0:00 [kthreadd]</div><div class="line">root         3  0.0  0.0      0     0 ?        S     2015   4:23 [ksoftirqd/0]</div><div class="line">root         5  0.0  0.0      0     0 ?        S&lt;    2015   0:00 [kworker/0:0H]</div><div class="line">root         7  0.0  0.0      0     0 ?        S     2015   0:01 [migration/0]</div><div class="line">root         8  0.0  0.0      0     0 ?        S     2015   0:00 [rcu_bh]</div><div class="line">root         9  0.0  0.0      0     0 ?        S     2015  25:32 [rcu_sched]</div><div class="line">root        10  0.0  0.0      0     0 ?        S     2015   1:59 [watchdog/0]</div><div class="line">root        11  0.0  0.0      0     0 ?        S     2015   1:42 [watchdog/1]</div><div class="line">root        12  0.0  0.0      0     0 ?        S     2015   0:01 [migration/1]</div><div class="line">root        13  0.0  0.0      0     0 ?        S     2015   3:36 [ksoftirqd/1]</div><div class="line">root        15  0.0  0.0      0     0 ?        S&lt;    2015   0:00 [kworker/1:0H]</div><div class="line">root        16  0.0  0.0      0     0 ?        S     2015   1:43 [watchdog/2]</div><div class="line">root        17  0.0  0.0      0     0 ?        S     2015   0:01 [migration/2]</div><div class="line">root        18  0.0  0.0      0     0 ?        S     2015   1:50 [ksoftirqd/2]</div><div class="line">......</div></pre></td></tr></table></figure>
<p><strong>ps命令的输出格式说明：</strong></p>
<table>
<thead>
<tr>
<th>格式</th>
<th>含意</th>
</tr>
</thead>
<tbody>
<tr>
<td> USER</td>
<td>该进程是由那个用户产生的；</td>
</tr>
<tr>
<td> PID</td>
<td>进程的ID号</td>
</tr>
<tr>
<td> %CPU</td>
<td>该进程占用的CPU资源的百分比，占用越高，进程越耗费资源</td>
</tr>
<tr>
<td> %MEM</td>
<td>该进程占用物理内存的百分比，占用越高，进程越耗费资源</td>
</tr>
<tr>
<td> VSZ</td>
<td>该进程占用虚拟内存的大小，单位KB</td>
</tr>
<tr>
<td> RSS</td>
<td>该进程占用实际物理内存的大小，单位KB</td>
</tr>
<tr>
<td> TTY</td>
<td>该进程是在那个终端中运行的，其中tty1-tty7代表本地控制台终端，tty1-tty6是本地的字符界面终端，tty7是图形终端。 pts/0-255代表虚拟终端</td>
</tr>
<tr>
<td> STAT</td>
<td>进程状态，常见的状态有：R：运行、S：睡眠、T：停止状态、s:包含子进程、+：位于后台</td>
</tr>
<tr>
<td> START</td>
<td>该进程的启动时间</td>
</tr>
<tr>
<td> TIME</td>
<td>该进程占用CPU的运算时间，注意不是系统时间</td>
</tr>
<tr>
<td> COMMAND</td>
<td>产生此进程的命令名</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>ps -le 查看系统中所有进程，使用linux标准命令格式</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td> a</td>
<td>显示一个终端的所有进程，除了会话引线</td>
</tr>
<tr>
<td> u</td>
<td>显示进程的归属用户及内存的使用情况</td>
</tr>
<tr>
<td> x</td>
<td>显示没有控制终端的进程</td>
</tr>
<tr>
<td>-l</td>
<td>长格式显示，显示更加详细的信息</td>
</tr>
<tr>
<td>-e</td>
<td>显示所有进程，和-A作用一致</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[root@iZ23kbqqy35Z ~]<span class="comment"># ps -le</span></div><div class="line">F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD</div><div class="line">4 S     0     1     0  0  80   0 -  4821 poll_s ?        00:00:01 init</div><div class="line">1 S     0     2     0  0  80   0 -     0 kthrea ?        00:00:00 kthreadd</div><div class="line">1 S     0     3     2  0  80   0 -     0 smpboo ?        00:04:23 ksoftirqd/0</div><div class="line">1 S     0     5     2  0  60 -20 -     0 worker ?        00:00:00 kworker/0:0H</div><div class="line">1 S     0     7     2  0 -40   - -     0 smpboo ?        00:00:01 migration/0</div><div class="line">1 S     0     8     2  0  80   0 -     0 rcu_gp ?        00:00:00 rcu_bh</div><div class="line">1 S     0     9     2  0  80   0 -     0 rcu_gp ?        00:25:32 rcu_sched</div><div class="line">5 S     0    10     2  0 -40   - -     0 smpboo ?        00:01:59 watchdog/0</div><div class="line">5 S     0    11     2  0 -40   - -     0 smpboo ?        00:01:42 watchdog/1</div><div class="line">1 S     0    12     2  0 -40   - -     0 smpboo ?        00:00:01 migration/1</div><div class="line">1 S     0    13     2  0  80   0 -     0 smpboo ?        00:03:36 ksoftirqd/1</div><div class="line">1 S     0    15     2  0  60 -20 -     0 worker ?        00:00:00 kworker/1:0H</div><div class="line">......</div></pre></td></tr></table></figure>
<ul>
<li><strong>查看进程树：pstree[选项]</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td>-p</td>
<td>显示进程的PID</td>
</tr>
<tr>
<td>-u</td>
<td>显示进程的所属用户</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@iZ23kbqqy35Z ~]<span class="comment"># pstree -p</span></div><div class="line">init(1)─┬─AliHids(9903)─┬─&#123;AliHids&#125;(9904)</div><div class="line">        │               ├─&#123;AliHids&#125;(9905)</div><div class="line">        │               ├─&#123;AliHids&#125;(9907)</div><div class="line">        │               ├─&#123;AliHids&#125;(9908)</div><div class="line">        │               ├─&#123;AliHids&#125;(9909)</div><div class="line">        │               ├─&#123;AliHids&#125;(9911)</div><div class="line">        │               ├─&#123;AliHids&#125;(9912)</div><div class="line">        │               └─&#123;AliHids&#125;(9915)</div><div class="line">        ├─AliYunDun(20201)─┬─&#123;AliYunDun&#125;(20202)</div><div class="line">        │                  ├─&#123;AliYunDun&#125;(20203)</div><div class="line">        │                  ├─&#123;AliYunDun&#125;(20204)</div><div class="line">        │                  ├─&#123;AliYunDun&#125;(20205)</div><div class="line">        │                  ├─&#123;AliYunDun&#125;(20206)</div><div class="line">        │                  ├─&#123;AliYunDun&#125;(20207)</div><div class="line">        │                  ├─&#123;AliYunDun&#125;(20208)</div><div class="line">        │                  └─&#123;AliYunDun&#125;(20209)</div><div class="line">        ├─AliYunDunUpdate(19913)─┬─&#123;AliYunDunUpdat&#125;(19914)</div><div class="line">        │                        ├─&#123;AliYunDunUpdat&#125;(19915)</div><div class="line">        │                        └─&#123;AliYunDunUpdat&#125;(19921)</div><div class="line">        ├─crond(2028)</div><div class="line">        ├─gshelld(2075)─┬─&#123;gshelld&#125;(2082)</div></pre></td></tr></table></figure>
<h4 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h4><ul>
<li><strong>top [选项]</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@iZ23kbqqy35Z ~]<span class="comment"># top</span></div><div class="line">top - 18:30:57 up 255 days,  7:28,  1 user,  load average: 0.00, 0.01, 0.05</div><div class="line">Tasks:  87 total,   1 running,  86 sleeping,   0 stopped,   0 zombie</div><div class="line">Cpu(s):  0.0%us,  0.2%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.2%st</div><div class="line">Mem:    377672k total,   322332k used,    55340k free,    32592k buffers</div><div class="line">Swap:   397308k total,    67192k used,   330116k free,    71900k cached</div><div class="line"></div><div class="line">  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                                                          </div><div class="line"> 6902 root      20   0 4372m 338m  12m S  0.3  4.4 135:51.36 java                                                                                                                              </div><div class="line"> 9903 root      20   0  881m  10m 6988 S  0.3  0.1 256:33.01 AliHids                                                                                                                           </div><div class="line">20201 root      20   0 63696 5596 3896 S  0.3  0.1  10:07.02 AliYunDun                                                                                                                         </div><div class="line">23664 root      20   0 15084 1136  848 R  0.3  0.0   0:00.01 top                                                                                                                               </div><div class="line">    1 root      20   0 19284 1508 1228 S  0.0  0.0   0:01.45 init                                                                                                                              </div><div class="line">    2 root      20   0     0    0    0 S  0.0  0.0   0:00.02 kthreadd                                                                                                                          </div><div class="line">    3 root      20   0     0    0    0 S  0.0  0.0   4:23.54 ksoftirqd/0                                                                                                                       </div><div class="line">    5 root       0 -20     0    0    0 S  0.0  0.0   0:00.00 kworker/0:0H                                                                                                                      </div><div class="line">    7 root      RT   0     0    0    0 S  0.0  0.0   0:01.79 migration/0                                                                                                                       </div><div class="line">    8 root      20   0     0    0    0 S  0.0  0.0   0:00.00 rcu_bh                                                                                                                            </div><div class="line">    9 root      20   0     0    0    0 S  0.0  0.0  25:32.77 rcu_sched                                                                                                                         </div><div class="line">   10 root      RT   0     0    0    0 S  0.0  0.0   1:59.69 watchdog/0                                                                                                                        </div><div class="line">   11 root      RT   0     0    0    0 S  0.0  0.0   1:42.38 watchdog/1                                                                                                                        </div><div class="line">   12 root      RT   0     0    0    0 S  0.0  0.0   0:01.76 migration/1</div></pre></td></tr></table></figure>
<ul>
<li><strong>第一行：</strong></li>
</ul>
<table>
<thead>
<tr>
<th>格式</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td> 18: 30 :57</td>
<td>系统当前时间 </td>
</tr>
<tr>
<td> up 255 days,  7:28</td>
<td>系统开机到现在经过了多少时间 </td>
</tr>
<tr>
<td>1 users</td>
<td>当前2用户在线 </td>
</tr>
<tr>
<td>load average: 0.00, 0.01, 0.05</td>
<td>系统1分钟、5分钟、15分钟的CPU负载信息</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>第二行：</strong></li>
</ul>
<table>
<thead>
<tr>
<th>格式</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td>Tasks</td>
<td>任务; </td>
</tr>
<tr>
<td>87 total</td>
<td>很好理解，就是当前有87个任务，也就是87个进程。 </td>
</tr>
<tr>
<td>1 running</td>
<td>1个进程正在运行 </td>
</tr>
<tr>
<td>86 sleeping</td>
<td>86个进程睡眠 </td>
</tr>
<tr>
<td>0 stopped</td>
<td>停止的进程数 </td>
</tr>
<tr>
<td>0 zombie</td>
<td>僵死的进程数</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>第三行：</strong></li>
</ul>
<table>
<thead>
<tr>
<th>格式</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td>Cpu(s)</td>
<td>表示这一行显示CPU总体信息 </td>
</tr>
<tr>
<td>0.0%us</td>
<td>用户态进程占用CPU时间百分比，不包含renice值为负的任务占用的CPU的时间。 </td>
</tr>
<tr>
<td>0.7%sy</td>
<td>内核占用CPU时间百分比 </td>
</tr>
<tr>
<td>0.0%ni</td>
<td>改变过优先级的进程占用CPU的百分比 </td>
</tr>
<tr>
<td>99.3%id</td>
<td>空闲CPU时间百分比 </td>
</tr>
<tr>
<td>0.0%wa</td>
<td>等待I/O的CPU时间百分比 </td>
</tr>
<tr>
<td>0.0%hi</td>
<td>CPU硬中断时间百分比 </td>
</tr>
<tr>
<td>0.0%si</td>
<td>CPU软中断时间百分比 </td>
</tr>
</tbody>
</table>
<p>注：这里显示数据是所有cpu的平均值，如果想看每一个cpu的处理情况，按1即可；折叠，再次按1；</p>
<ul>
<li><strong>第四行：</strong></li>
</ul>
<table>
<thead>
<tr>
<th>格式</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td>Men</td>
<td>内存的意思 </td>
</tr>
<tr>
<td>8175320kk total</td>
<td>物理内存总量 </td>
</tr>
<tr>
<td>8058868k used</td>
<td>使用的物理内存量 </td>
</tr>
<tr>
<td>116452k free</td>
<td>空闲的物理内存量 </td>
</tr>
<tr>
<td>283084k buffers</td>
<td>用作内核缓存的物理内存量</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>第五行：</strong></li>
</ul>
<table>
<thead>
<tr>
<th>格式</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td>Swap</td>
<td>交换空间 </td>
</tr>
<tr>
<td>6881272k total</td>
<td>交换区总量 </td>
</tr>
<tr>
<td>4010444k used</td>
<td>使用的交换区量 </td>
</tr>
<tr>
<td>2870828k free</td>
<td>空闲的交换区量 </td>
</tr>
<tr>
<td>4336992k cached</td>
<td>缓冲交换区总量</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>第六行：进程信息</strong></li>
</ul>
<table>
<thead>
<tr>
<th>格式</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td>PID</td>
<td>进程的ID </td>
</tr>
<tr>
<td>USER</td>
<td>进程所有者 </td>
</tr>
<tr>
<td>PR</td>
<td>进程的优先级别，越小越优先被执行 </td>
</tr>
<tr>
<td>NInice</td>
<td>值 </td>
</tr>
<tr>
<td>VIRT</td>
<td>进程占用的虚拟内存 </td>
</tr>
<tr>
<td>RES</td>
<td>进程占用的物理内存 </td>
</tr>
<tr>
<td>SHR</td>
<td>进程使用的共享内存 </td>
</tr>
<tr>
<td>S</td>
<td>进程的状态。S表示休眠，R表示正在运行，Z表示僵死状态，N表示该进程优先值为负数 </td>
</tr>
<tr>
<td>%CPU</td>
<td>进程占用CPU的使用率 </td>
</tr>
<tr>
<td>%MEM</td>
<td>进程使用的物理内存和总内存的百分比 </td>
</tr>
<tr>
<td>TIME+</td>
<td>该进程启动后占用的总的CPU时间，即占用CPU使用时间的累加值。 </td>
</tr>
<tr>
<td>COMMAND</td>
<td>进程启动命令名称</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>top命令交互操作指令</strong></li>
</ul>
<table>
<thead>
<tr>
<th>格式</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td>q</td>
<td>退出top命令</td>
</tr>
<tr>
<td><space></space></td>
<td>立即刷新</td>
</tr>
<tr>
<td>s</td>
<td>设置刷新时间间隔</td>
</tr>
<tr>
<td>c</td>
<td>显示命令完全模式</td>
</tr>
<tr>
<td>t:</td>
<td>显示或隐藏进程和CPU状态信息</td>
</tr>
<tr>
<td>m</td>
<td>显示或隐藏内存状态信息</td>
</tr>
<tr>
<td>l</td>
<td>显示或隐藏uptime信息</td>
</tr>
<tr>
<td>f</td>
<td>增加或减少进程显示标志</td>
</tr>
<tr>
<td>S</td>
<td>累计模式，会把已完成或退出的子进程占用的CPU时间累计到父进程的MITE+</td>
</tr>
<tr>
<td>P</td>
<td>按%CPU使用率排行</td>
</tr>
<tr>
<td>T</td>
<td>按MITE+排行</td>
</tr>
<tr>
<td>M</td>
<td>按%MEM排行</td>
</tr>
<tr>
<td>u</td>
<td>指定显示用户进程</td>
</tr>
<tr>
<td>r</td>
<td>修改进程renice值</td>
</tr>
<tr>
<td>k</td>
<td>kill进程</td>
</tr>
<tr>
<td>i</td>
<td>只显示正在运行的进程</td>
</tr>
<tr>
<td>W</td>
<td>保存对top的设置到文件~/.toprc，下次启动将自动调用toprc文件的设置。</td>
</tr>
<tr>
<td>h</td>
<td>帮助命令。</td>
</tr>
<tr>
<td>q</td>
<td>退出</td>
</tr>
</tbody>
</table>
<p><strong>注：</strong>强调一下，使用频率最高的是P、T、M，因为通常使用top，我们就想看看是哪些进程最耗cpu资源、占用的内存最多；<br>注：通过”shift + &gt;”或”shift + &lt;”可以向右或左改变排序列<br>如果只需要查看内存：可用free命令。只查看uptime信息（第一行），可用uptime命令；</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://jingyan.baidu.com/article/4d58d5412917cb9dd4e9c0ed.html" title="没创新" target="_blank" rel="external">linux怎样使用top命令查看系统状态</a></p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker系列(一)docker基础命令与dockerfile文件创建镜像]]></title>
      <url>http://www.troylc.cc/docker/2016/07/17/docker-01.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>近期烦心事太多，包括工作、生活上的。归根结底还是自己不够强大，对于博客还没有坚持一个星期两篇博文，那就先坚持一个星期一篇吧，从简单开始，从放下开始，尽量让自己每时每个，坚持一些向上的的东西。对于这篇文章，docker目前一直在用，所以总结了一些关于docker基础性的东西。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="docker基础命令和含义"><a href="#docker基础命令和含义" class="headerlink" title="docker基础命令和含义"></a>docker基础命令和含义</h4><ol>
<li>docker version<br>显示 Docker 版本信息。</li>
<li>docker info<br>显示 Docker 系统信息，包括镜像和容器数。</li>
<li>docker search<br>从 Docker Hub 中搜索符合条件的镜像。</li>
<li>docker pull<br>从 Docker Hub 中拉取或者更新指定镜像。</li>
<li>docker login<br>按步骤输入在 Docker Hub 注册的用户名、密码和邮箱即可完成登录。</li>
<li>docker logout<br>运行后从指定服务器登出，默认为官方服务器。</li>
<li>docker images<br>列出本地所有镜像。其中 [name] 对镜像名称进行关键词查询。</li>
<li>docker ps<br>列出所有运行中容器。</li>
<li>docker rmi<br>从本地移除一个或多个指定的镜像。</li>
<li>docker rm<br>移除一个或多个指定的容器</li>
<li>docker history<br>查看指定镜像的创建历史。</li>
<li>docker create|start|stop|restart|pause|unpause<br>创建、启动、停止、重启、暂停和恢复一个或多个指定容器。</li>
<li>docker kill<br>杀死一个或多个指定容器进程。</li>
<li>docker events<br>从服务器拉取个人动态，可选择时间区间。</li>
<li>docker save<br>docker save &gt; “debian.tar”<br>将指定镜像保存成 tar 归档文件， docker load 的逆操作。保存后再加载（saved-loaded）的镜像不会丢失提交历史和层，可以回滚。</li>
<li>docker load<br>docker load &lt; debian.tar<br>从 tar 镜像归档中载入镜像， docker save 的逆操作。保存后再加载（saved-loaded）的镜像不会丢失提交历史和层，可以回滚。</li>
<li>docker export<br>docker export <container><br>将指定的容器保存成 tar 归档文件， docker import 的逆操作。导出后导入（exported-imported)）的容器会丢失所有的提交历史，无法回滚。</container></li>
<li>docker import<br>docker import url|-  “o”&gt;[repository[:tag “o”&gt;]]<br>从归档文件（支持远程文件）创建一个镜像， export 的逆操作，可为导入镜像打上标签。导出后导入（exported-imported)）的容器会丢失所有的提交历史，无法回滚。</li>
<li>docker top<br>docker top <running_container>  “o”&gt;[ps options]<br>查看一个正在运行容器进程，支持 ps 命令参数。</running_container></li>
<li>docker inspect<br>docker instpect nginx:latest<br>检查镜像或者容器的参数，默认返回 JSON 格式。</li>
<li>docker pause<br>暂停某一容器的所有进程。</li>
<li>docker unpause<br>docker unpause <container><br>恢复某一容器的所有进程。</container></li>
<li>docker tag<br>docker tag [options “o”&gt;] <image>[:tag “o”&gt;] [repository/ “o”&gt;][username/]name “o”&gt;[:tag]<br>标记本地镜像，将其归入某一仓库。</image></li>
<li>docker push<br>docker push laozhu/nginx:latest<br>将镜像推送至远程仓库，默认为 Docker Hub 。</li>
<li>docker logs<br>docker logs [options “o”&gt;] <container><br>docker logs -f -t –tail= “s2”&gt;”10” insane_babbage<br>获取容器运行时的输出日志。</container></li>
<li>docker run<br>docker run [options “o”&gt;] <image> [ “nb”&gt;command]  “o”&gt;[arg…]<br>启动一个容器，在其中运行指定命令。见下面详细说明。</image></li>
</ol>
<h4 id="docker-run命令的中的参数以及含义"><a href="#docker-run命令的中的参数以及含义" class="headerlink" title="docker run命令的中的参数以及含义"></a>docker run命令的中的参数以及含义</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run [options <span class="string">"o"</span>&gt;] &lt;image&gt; [ <span class="string">"nb"</span>&gt;<span class="built_in">command</span>]  <span class="string">"o"</span>&gt;[arg...]</div></pre></td></tr></table></figure>
<p>启动一个容器，在其中运行指定命令。<br>-a stdin 指定标准输入输出内容类型，可选 STDIN/<br>STDOUT / STDERR 三项；<br>-d 后台运行容器，并返回容器ID；<br>-i 以交互模式运行容器，通常与 -t 同时使用；<br>-t 为容器重新分配一个伪输入终端，通常与 -i 同时使用；<br>–name=”nginx-lb” 为容器指定一个名称；<br>–dns 8.8.8.8 指定容器使用的DNS服务器，默认和宿主一致；<br>–dns-search example.com 指定容器DNS搜索域名，默认和宿主一致；<br>-h “mars” 指定容器的hostname；<br>-e username=”ritchie” 设置环境变量；<br>–env-file=[] 从指定文件读入环境变量；<br>–cpuset=”0-2” or –cpuset=”0,1,2”绑定容器到指定CPU运行；<br>-c 可以调整container的cpu优先级。默认情况下，所有的container享有相同的cpu优先级和cpu调度周期。但你可以通过Docker来通知内核给予某个或某几个container更多的cpu计算周期。<br>　　默认情况下，使用-c或者–cpu-shares 参数值为0，可以赋予当前活动container 1024个cpu共享周期。这个0值可以针对活动的container进行修改来调整不同的cpu循环周期。<br>　　比如，我们使用-c或者–cpu-shares =0启动了C0，C1，C2三个container，使用-c/–cpu-shares=512启动了C3.这时，C0，C1，C2可以100%的使用CPU资源(1024)，但C3只能使用50%的CPU资源(512)。如果这个host的OS是时序调度类型的，每个CPU时间片是100微秒，那么C0，C1，C2将完全使用掉这100微秒，而C3只能使用50微秒。<br>-m 可以很方便的调整container所使用的内存资源。如果host支持swap内存，那么使用-m可以设定比host物理内存还大的值。<br>–net=”bridge” 指定容器的网络连接类型，支持 bridge /host / none container:<name|id> 四种类型；<br>–expose=[] 可以让container接受外部传入的数据。container内监听的port不需要和外部host的port相同。比如说在container内部，一个HTTP服务监听在80端口，对应外部host的port就可能是49880.<br>　　操作人员可以使用–expose，让新的container访问到这个container。具体有三个方式：<br>　　1. 使用-p来启动container。<br>　　2. 使用-P来启动container。<br>　　3. 使用–link来启动container。<br>-p 如果使用-p或者-P，那么container会开发部分端口到host，只要对方可以连接到host，就可以连接到container内部。当使用-P时，docker会在host中随机从49153 和65535之间查找一个未被占用的端口绑定到container。你可以使用docker port来查找这个随机绑定端口。<br>–link=[] 当你使用–link方式时，作为客户端的container可以通过私有网络形式访问到这个container。同时Docker会在客户端的container中设定一些环境变量来记录绑定的IP和PORT。<br>-v=[]: docker可以支持把一个宿主机上的目录挂载到镜像里。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -it -v /home/dock/Downloads:/usr/Downloads ubuntu64 /bin/bash</div></pre></td></tr></table></figure></name|id></p>
<p>通过-v参数，冒号前为宿主机目录，必须为绝对路径，冒号后为镜像内挂载的路径。<br>现在镜像内就可以共享宿主机里的文件了。<br>默认挂载的路径权限为读写。如果指定为只读可以用：ro<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -it -v /home/dock/Downloads:/usr/Downloads:ro ubuntu64 /bin/bash</div></pre></td></tr></table></figure></p>
<p>docker还提供了一种高级的用法。叫数据卷。<br>数据卷：“其实就是一个正常的容器，专门用来提供数据卷供其它容器挂载的”。感觉像是由一个容器定义的一个数据挂载信息。其他的容器启动可以直接挂载数据卷容器中定义的挂载信息。<br>看示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -v /home/dock/Downloads:/usr/Downloads  --name dataVol ubuntu64 /bin/bash</div></pre></td></tr></table></figure></p>
<p>创建一个普通的容器。用–name给他指定了一个名（不指定的话会生成一个随机的名子）。<br>再创建一个新的容器，来使用这个数据卷。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -it --volumes-from dataVol ubuntu64 /bin/bash</div></pre></td></tr></table></figure></p>
<p>–volumes-from用来指定要从哪个数据卷来挂载数据。<br>-u: USERcontainer中默认的用户是root。但是开发人员创建新的用户之后，这些新用户也是可以使用的。开发人员可以通过Dockerfile的USER设定默认的用户，操作人员可以通过”-u”来覆盖这些参数。<br>-w: WORKDIR<br>container中默认的工作目录是根目录(/)。开发人员可以通过Dockerfile的WORKDIR来设定默认工作目录，操作人员可以通过”-w”来覆盖默认的工作目录。</p>
<h4 id="通过Dockerfile构建镜像"><a href="#通过Dockerfile构建镜像" class="headerlink" title="通过Dockerfile构建镜像"></a>通过Dockerfile构建镜像</h4><h5 id="Dockerfiles基础说明"><a href="#Dockerfiles基础说明" class="headerlink" title="Dockerfiles基础说明"></a>Dockerfiles基础说明</h5><p>Dockerfiles是由一系列命令和参数构成的脚本，这些命令应用于基础镜像并最终创建一个新的镜像。它们简化了从头到尾的流程并极大的简化了 部署工作。Dockerfile从FROM命令开始，紧接着跟随者各种方法，命令和参数。其产出为一个新的可以用于创建容器的镜像。</p>
<h5 id="Dockerfile指令介绍："><a href="#Dockerfile指令介绍：" class="headerlink" title="Dockerfile指令介绍："></a>Dockerfile指令介绍：</h5><p><strong>FROM</strong><br>  语法：FROM <image>[:<tag>]<br>  解释：设置要制作的镜像基于哪个镜像，FROM指令必须是整个Dockerfile的第一个指令，如果指定的镜像不存在默认会自动从Docker Hub上下载。<br><strong>MAINTAINER</strong><br>  语法：MAINTAINER <name><br>  解释：MAINTAINER指令允许你给将要制作的镜像设置作者信息<br><strong>RUN</strong><br>  语法：①RUN <command>        #将会调用/bin/sh -c <command><br>  RUN [“executable”, “param1”, “param2”]    #将会调用exec执行，以避免有些时候shell方式执行时的传递参数问题，而且有些基础镜像可能不包含/bin/sh<br>  解释：RUN指令会在一个新的容器中执行任何命令，然后把执行后的改变提交到当前镜像，提交后的镜像会被用于Dockerfile中定义的下一步操作，RUN中定义的命令会按顺序执行并提交，这正是Docker廉价的提交和可以基于镜像的任何一个历史点创建容器的好处，就像版本控制工具一样。<br><strong>CMD</strong><br>  语法：①CMD [“executable”, “param1”, “param2”]    #将会调用exec执行，首选方式<br>  CMD [“param1”, “param2”]        #当使用ENTRYPOINT指令时，为该指令传递默认参数<br>  CMD <command> [ <param1>|<param2> ]        #将会调用/bin/sh -c执行<br>  解释：CMD指令中指定的命令会在镜像运行时执行，在Dockerfile中只能存在一个，如果使用了多个CMD指令，则只有最后一个CMD指令有效。当出现ENTRYPOINT指令时，CMD中定义的内容会作为ENTRYPOINT指令的默认参数，也就是说可以使用CMD指令给ENTRYPOINT传递参数。<br>  注意：RUN和CMD都是执行命令，他们的差异在于RUN中定义的命令会在执行docker build命令创建镜像时执行，而CMD中定义的命令会在执行docker run命令运行镜像时执行，另外使用第一种语法也就是调用exec执行时，命令必须为绝对路径。<br><strong>EXPOSE</strong><br>  语法：EXPOSE <port> [ …]<br>  解释：EXPOSE指令用来告诉Docker这个容器在运行时会监听哪些端口，Docker在连接不同的容器(使用–link参数)时使用这些信息。<br><strong>ENV</strong><br>  语法：ENV <key> <value><br>  解释：ENV指令用于设置环境变量，在Dockerfile中这些设置的环境变量也会影响到RUN指令，当运行生成的镜像时这些环境变量依然有效，如果需要在运行时更改这些环境变量可以在运行docker run时添加–env <key>=<value>参数来修改。<br>  注意：最好不要定义那些可能和系统预定义的环境变量冲突的名字，否则可能会产生意想不到的结果。<br><strong>ADD</strong><br>  语法：ADD <src> <dest><br>  解释：ADD指令用于从指定路径拷贝一个文件或目录到容器的指定路径中，<src>是一个文件或目录的路径，也可以是一个url，路径是相对于该Dockerfile文件所在位置的相对路径，<dest>是目标容器的一个绝对路径，例如/home/yooke/Docker/Dockerfile这个文件中定义的，那么ADD /data.txt /db/指令将会尝试拷贝文件从/home/yooke/Docker/data.txt到将要生成的容器的/db/data.txt，且文件或目录的属组和属主分别为uid和gid为0的用户和组，如果是通过url方式获取的文件，则权限是600。<br>  注意：①如果执行docker build – &lt; somefile即通过标准输入来创建时，ADD指令只支持url方式，另外如果url需要认证，则可以通过RUN wget …或RUN curl …来完成，ADD指令不支持认证。<br>  <src>路径必须与Dockerfile在同级目录或子目录中，例如不能使用ADD ../somepath，因为在执行docker build时首先做的就是把Dockerfile所在目录包含子目录发送给docker的守护进程。<br>  如果<src>是一个url且<dest>不是以”/“结尾，则会下载文件并重命名为<dest>。<br>  如果<src>是一个url且<dest>以“/”结尾，则会下载文件到<dest>/<filename>，url必须是一个正常的路径形式，“<a href="http://example.com”像这样的url是不能正常工作的。" target="_blank" rel="external">http://example.com”像这样的url是不能正常工作的。</a><br>  如果<src>是一个本地的压缩包且<dest>是以“/”结尾的目录，则会调用“tar -x”命令解压缩，如果<dest>有同名文件则覆盖，但<src>是一个url时不会执行解压缩。<br><strong>COPY</strong><br>  语法：COPY <src> <dest><br>  解释：用法与ADD相同，不过<src>不支持使用url，所以在使用docker build – &lt; somefile时该指令不能使用。<br><strong>ENTRYPOINT</strong><br>  语法：ENTRYPOINT [“executable”, “param1”, “param2”]        #将会调用exec执行，首选方式<br>  ENTRYPOINT command param1 param2             #将会调用/bin/sh -c执行<br>  解释：ENTRYPOINT指令中指定的命令会在镜像运行时执行，在Dockerfile中只能存在一个，如果使用了多个ENTRYPOINT指令，则只有最后一个指令有效。ENTRYPOINT指令中指定的命令(exec执行的方式)可以通过docker run来传递参数，例如docker run <images> -l启动的容器将会把-l参数传递给ENTRYPOINT指令定义的命令并会覆盖CMD指令中定义的默认参数(如果有的话)，但不会覆盖该指令定义的参数，例如ENTRYPOINT [“ls”,”-a”]，CMD [“/etc”],当通过docker run <image>启动容器时该容器会运行ls -a /etc命令，当使用docker run <image> -l启动时该容器会运行ls -a -l命令，-l参数会覆盖CMD指令中定义的/etc参数。<br>  注意：<br>   ①当使用ENTRYPOINT指令时生成的镜像运行时只会执行该指令指定的命令。<br>   ②当出现ENTRYPOINT指令时CMD指令只可能(当ENTRYPOINT指令使用exec方式执行时)被当做ENTRYPOINT指令的参数使用，其他情况则会被忽略。<br><strong>VOLUME</strong><br>  语法：VOLUME [“samepath”]<br>  解释：VOLUME指令用来设置一个挂载点，可以用来让其他容器挂载以实现数据共享或对容器数据的备份、恢复或迁移，具体用法请参考其他文章。<br><strong>USER</strong><br>  语法：USER [username|uid]<br>  解释：USER指令用于设置用户或uid来运行生成的镜像和执行RUN指令。<br><strong>WORKDIR</strong><br>  语法：WORKDIR /path/to/workdir<br>  解释：WORKDIR指令用于设置Dockerfile中的RUN、CMD和ENTRYPOINT指令执行命令的工作目录(默认为/目录)，该指令在Dockerfile文件中可以出现多次，如果使用相对路径则为相对于WORKDIR上一次的值，例如WORKDIR /data，WORKDIR logs，RUN pwd最终输出的当前目录是/data/logs。<br><strong>ONBUILD</strong><br>  语法：ONBUILD [INSTRUCTION]<br>  解释：ONBUILD指令用来设置一些触发的指令，用于在当该镜像被作为基础镜像来创建其他镜像时(也就是Dockerfile中的FROM为当前镜像时)执行一些操作，ONBUILD中定义的指令会在用于生成其他镜像的Dockerfile文件的FROM指令之后被执行，上述介绍的任何一个指令都可以用于ONBUILD指令，可以用来执行一些因为环境而变化的操作，使镜像更加通用。<br>  注意：<br>   ①ONBUILD中定义的指令在当前镜像的build中不会被执行。<br>   ②可以通过查看docker inspeat <image>命令执行结果的OnBuild键来查看某个镜像ONBUILD指令定义的内容。<br>   ③ONBUILD中定义的指令会当做引用该镜像的Dockerfile文件的FROM指令的一部分来执行，执行顺序会按ONBUILD定义的先后顺序执行，如果ONBUILD中定义的任何一个指令运行失败，则会使FROM指令中断并导致整个build失败，当所有的ONBUILD中定义的指令成功完成后，会按正常顺序继续执行build。<br>   ④ONBUILD中定义的指令不会继承到当前引用的镜像中，也就是当引用ONBUILD的镜像创建完成后将会清除所有引用的ONBUILD指令。<br>   ⑤ONBUILD指令不允许嵌套，例如ONBUILD ONBUILD ADD . /data是不允许的。<br>   ⑥ONBUILD指令不会执行其定义的FROM或MAINTAINER指令。</image></image></image></images></src></dest></src></src></dest></dest></src></filename></dest></dest></src></dest></dest></src></src></dest></src></dest></src></value></key></value></key></port></param2></param1></name></tag></image></p>
<h4 id="dockerfile案例"><a href="#dockerfile案例" class="headerlink" title="dockerfile案例"></a>dockerfile案例</h4><h5 id="示例一：创建一个MongoDB的镜像"><a href="#示例一：创建一个MongoDB的镜像" class="headerlink" title="示例一：创建一个MongoDB的镜像"></a>示例一：创建一个MongoDB的镜像</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">############################################################</span></div><div class="line"><span class="comment"># Dockerfile to build MongoDB container images</span></div><div class="line"><span class="comment"># Based on Ubuntu</span></div><div class="line"><span class="comment">############################################################</span></div><div class="line"><span class="comment"># Set the base image to Ubuntu</span></div><div class="line">FROM ubuntu</div><div class="line"><span class="comment"># File Author / Maintainer</span></div><div class="line">MAINTAINER Example McAuthor</div><div class="line"><span class="comment"># Update the repository sources list</span></div><div class="line">RUN apt-get update</div><div class="line"><span class="comment">################## BEGIN INSTALLATION ######################</span></div><div class="line"><span class="comment"># Install MongoDB Following the Instructions at MongoDB Docs</span></div><div class="line"><span class="comment"># Ref: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/</span></div><div class="line"><span class="comment"># Add the package verification key</span></div><div class="line">RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10</div><div class="line"><span class="comment"># Add MongoDB to the repository sources list</span></div><div class="line">RUN <span class="built_in">echo</span> <span class="string">'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen'</span> | tee /etc/apt/sources.list.d/mongodb.list</div><div class="line"><span class="comment"># Update the repository sources list once more</span></div><div class="line">RUN apt-get update</div><div class="line"><span class="comment"># Install MongoDB package (.deb)</span></div><div class="line">RUN apt-get install -y mongodb-10gen</div><div class="line"><span class="comment"># Create the default data directory</span></div><div class="line">RUN mkdir -p /data/db</div><div class="line"><span class="comment">##################### INSTALLATION END #####################</span></div><div class="line"><span class="comment"># Expose the default port</span></div><div class="line">EXPOSE 27017</div><div class="line"><span class="comment"># Default port to execute the entrypoint (MongoDB)</span></div><div class="line">CMD [<span class="string">"--port 27017"</span>]</div><div class="line"><span class="comment"># Set default container command</span></div><div class="line">ENTRYPOINT usr/bin/mongod</div></pre></td></tr></table></figure>
<p>使用上述的Dockerfile，我们已经可以开始构建MongoDB镜像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker build -t my_mongodb .</div></pre></td></tr></table></figure></p>
<h5 id="示例二：创建一个JAVA-Tomcat的镜像"><a href="#示例二：创建一个JAVA-Tomcat的镜像" class="headerlink" title="示例二：创建一个JAVA Tomcat的镜像"></a>示例二：创建一个JAVA Tomcat的镜像</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># VERSION 0.0.1</span></div><div class="line"><span class="comment"># 默认ubuntu server长期支持版本，当前是12.04</span></div><div class="line">FROM ubuntu</div><div class="line"><span class="comment"># 签名啦</span></div><div class="line">MAINTAINER yongboy <span class="string">"yongboy@gmail.com"</span></div><div class="line"></div><div class="line"><span class="comment"># 更新源，安装ssh server</span></div><div class="line">RUN <span class="built_in">echo</span> <span class="string">"deb http://archive.ubuntu.com/ubuntu precise main universe"</span>&gt; /etc/apt/sources.list</div><div class="line">RUN apt-get update</div><div class="line"></div><div class="line">RUN apt-get install -y openssh-server</div><div class="line">RUN mkdir -p /var/run/sshd</div><div class="line"></div><div class="line"><span class="comment"># 设置root ssh远程登录密码为123456</span></div><div class="line">RUN <span class="built_in">echo</span> <span class="string">"root:123456"</span> | chpasswd </div><div class="line"></div><div class="line"><span class="comment"># install vim</span></div><div class="line">RUN apt-get -y remove vim-common</div><div class="line">RUN apt-get -y install vim</div><div class="line">  </div><div class="line"><span class="comment"># Install curl  </span></div><div class="line">RUN apt-get -y install curl</div><div class="line">RUN </div><div class="line">rm -rf /var/lib/apt/lists/*  </div><div class="line"><span class="comment"># Install JDK 7  </span></div><div class="line">RUN <span class="built_in">cd</span> /tmp &amp;&amp;  curl -L <span class="string">'http://download.oracle.com/otn-pub/java/jdk/7u65-b17/jdk-7u65-linux-x64.tar.gz'</span> -H <span class="string">'Cookie: oraclelicense=accept-securebackup-cookie; gpw_e24=Dockerfile'</span> | tar -xz  </div><div class="line">RUN mkdir -p /usr/lib/jvm  </div><div class="line">RUN mv /tmp/jdk1.7.0_65/ /usr/lib/jvm/java-7-oracle/  </div><div class="line">  </div><div class="line"><span class="comment"># Set Oracle JDK 7 as default Java  </span></div><div class="line">RUN update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-7-oracle/bin/java 300    </div><div class="line">RUN update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-7-oracle/bin/javac 300 </div><div class="line">  </div><div class="line">ENV JAVA_HOME /usr/lib/jvm/java-7-oracle/  </div><div class="line">  </div><div class="line"><span class="comment"># Install tomcat7  </span></div><div class="line">RUN <span class="built_in">cd</span> /tmp &amp;&amp; curl -L <span class="string">'http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.8/bin/apache-tomcat-7.0.8.tar.gz'</span> | tar -xz  </div><div class="line">RUN mv /tmp/apache-tomcat-7.0.8/ /opt/tomcat7/  </div><div class="line">  </div><div class="line">ENV CATALINA_HOME /opt/tomcat7  </div><div class="line">ENV PATH <span class="variable">$PATH</span>:<span class="variable">$CATALINA_HOME</span>/bin  </div><div class="line">  </div><div class="line">ADD tomcat7.sh /etc/init.d/tomcat7  </div><div class="line">RUN chmod 755 /etc/init.d/tomcat7  </div><div class="line"></div><div class="line"><span class="comment"># 容器需要开放SSH 22端口</span></div><div class="line">EXPOSE 22</div><div class="line"></div><div class="line"><span class="comment"># 容器需要开放Tomcat 8080端口</span></div><div class="line">EXPOSE 8080</div><div class="line"></div><div class="line"><span class="comment"># 设置Tomcat7初始化运行，SSH终端服务器作为后台运行</span></div><div class="line">ENTRYPOINT service tomcat7 start &amp;&amp; /usr/sbin/sshd -D &amp;&amp; tail <span class="_">-f</span> /opt/tomcat7/logs/catalina.out</div></pre></td></tr></table></figure>
<p><strong>需要注意：</strong><br>ENTRYPOINT，表示镜像在初始化时需要执行的命令，不可被重写覆盖，需谨记<br>CMD，表示镜像运行默认参数，可被重写覆盖<br>ENTRYPOINT/CMD都只能在文件中存在一次，并且最后一个生效 多个存在，只有最后一个生效，其它无效！<br>需要初始化运行多个命令，彼此之间可以使用 &amp;&amp; 隔开，但最后一个须要为无限运行的命令，需切记！<br>ENTRYPOINT/CMD，一般两者可以配合使用，比如：<br>ENTRYPOINT [“/usr/sbin/sshd”]<br>CMD [“-D”]<br>在Docker　daemon模式下，无论你是使用ENTRYPOINT，还是CMD，最后的命令，一定要是当前进程需要一直运行的，才能够防容器退出。<br>以下无效方式：<br> ENTRYPOINT service tomcat7 start #运行几秒钟之后，容器就会退出<br> CMD service tomcat7 start #运行几秒钟之后，容器就会退出<br>这样有效：<br>ENTRYPOINT service tomcat7 start &amp;&amp; tail -f /var/lib/tomcat7/logs/catalina.out<br>或者<br>CMD service tomcat7 start &amp;&amp; tail -f /var/lib/tomcat7/logs/catalina.out<br>这样也有效：<br> ENTRYPOINT [“/usr/sbin/sshd”]<br> CMD [“-D”]<br>具体请参考官方文档：Dockerfiles for Images<br>构建镜像</p>
<p>脚本写好了，需要转换成镜像：<br>docker build -t yongboy/java7 .<br>-t： 为构建的镜像制定一个标签，便于记忆/索引等<br>. ： 指定Dockerfile文件在当前目录下<br>网速不太好，会等待很长时间。很多操作可能需要科学上网，逼得我只能一直挂着VPN，方能畅通无阻。<br>构建镜像完成之后，看看运行效果：<br>docker run -d -p 22 -p 8080:8080 yongboy/java7<br>在运行命令中，还得需要显式指定 -p 22 -p 8080:8080，否则在Docker 0.8.1版本中不会主动映射到宿主机上。据悉在Docker 0.4.8版本时，就不担心这个问题。 或者，您要有好的方式，不妨告知于我，谢谢。<br>在Dockerfile中，若没有使用ENTRYPOINT/CMD指令，若运行多个命令，可以这样做：<br>docker run -d -p 22 -p 8080 yongboy/java7 /bin/sh -c “service tomcat7 start &amp;&amp; /usr/sbin/sshd -D”<br>提交/保存镜像</p>
<p>创建好的镜像，可以保存到索引仓库中，便于下次使用（当然，我们直接共享Dockerfile，是最简单的事情，:)) ），但毕竟镜像可以做到开箱即用。<br><a href="https://index.docker.io/" target="_blank" rel="external">https://index.docker.io/</a> 注册一个账号，例如yongboy<br>构建镜像<br>docker build -t yongboy/java7 .<br>上面已经构建OK的话，可省略此步。<br>登陆<br>docker login<br>提交到Docker索引仓库<br>docker push yongboy/java7<br>现在可以起来喝杯热水，出去溜达会，也不一定能够上传完毕，那叫一个慢啊！<br>上传OK的话，可以得到类似地址：<a href="https://index.docker.io/u/yongboy/java7/" target="_blank" rel="external">https://index.docker.io/u/yongboy/java7/</a><br>如何使用镜像<br>docker pull yongboy/java7<br>剩下的步骤，就很简单了。</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://wenku.baidu.com/link?url=wP5bW_rRwEDM71Uum8liLgL_aLTBV1JX2tjEijExkRqs-mvcSJdyhmtGoAhfU9v45LU0k0ltyzzCEk67KYxpatINlftgntGl5zRbdEgfJAO" title="命令" target="_blank" rel="external">docker命令语句</a><br><a href="http://my.oschina.net/2xixi/blog/516951" title="dockerfile详解" target="_blank" rel="external">dockerfile详解</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux系列(一)-linux下的mysql定时备份-nfs异地存储]]></title>
      <url>http://www.troylc.cc/linux/2016/07/10/linux-01.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近一直忙着工作方面的事，没时间来总结和更新博客，本来想法是想一周，至少两篇关于技术方面的博文，原来一起想写java方面的文章，一直没有总结好。后面的文章，都是有经过自己新手实践过。希望能和大家一起坚持下来。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>基于docker容器的mysql定时备份-nfs异地存储，正好是最近工作中实践过，所以拿来分享一下，</p>
<h4 id="首先nfs网络文件系统搭建："><a href="#首先nfs网络文件系统搭建：" class="headerlink" title="首先nfs网络文件系统搭建："></a>首先nfs网络文件系统搭建：</h4><p><strong>安装：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nfs-utils rpcbind</div></pre></td></tr></table></figure></p>
<p>一般系统安装后，都会安装这个必备的软件的，设置开机启动:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@master-zookeeper ~]<span class="comment">#systemctl enable nfs 或者 systemctl enable nfs-server.service</span></div><div class="line">[root@master-zookeeper ~]<span class="comment">#systemctl enable rpcbind</span></div></pre></td></tr></table></figure></p>
<h5 id="一、环境介绍："><a href="#一、环境介绍：" class="headerlink" title="一、环境介绍："></a>一、环境介绍：</h5><ul>
<li>三台台Vmware虚拟机(网络模式为nat)：<br>服务器：(service)192.168.159.71(centos7)<br>客户端：(client1)192.168.159.72(centos7)<br>客户端：(client2)192.168.159.73(centos7)</li>
<li>升级这三台（192.168.159.71/72/73）主机的内核到最新版本。为安装最新的docker版本<br>升级内核(在连网的环境下)<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></div><div class="line">[root@localhost bin]<span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span></div><div class="line">[root@localhost bin]<span class="comment"># yum --enablerepo=elrepo-kernel install kernel-ml</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>也可以通过此<a href="http://pkgs.org/download/kernel-devel网站手工下载安装" target="_blank" rel="external">http://pkgs.org/download/kernel-devel网站手工下载安装</a><br>重要：目前内核还是默认的版本，如果在这一步完成后你就直接reboot了，重启后使用的内核版本还是默认的3.10，不会使用新的4.3，想修改启动的顺序，需要进行下一步</p>
<ul>
<li>查看默认启动顺序<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># awk -F\' '$1=="menuentry " &#123;print $2&#125;' /etc/grub2.cfg</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>默认启动的顺序是从0开始，但我们新内核是从头插入（目前位置在0，而3.10的是在1），所以需要选择0，如果想生效最新的内核，需要<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># grub2-set-default 0   我这里是1</span></div></pre></td></tr></table></figure></p>
<h5 id="二、服务器端配置（192-168-159-71）："><a href="#二、服务器端配置（192-168-159-71）：" class="headerlink" title="二、服务器端配置（192.168.159.71）："></a>二、服务器端配置（192.168.159.71）：</h5><ul>
<li><p>创建共享目录：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master-zookeeper ~]<span class="comment"># mkdir –p /nfs-data/dmp/db-bak/ /nfs-data/dmp/data/ /nfs-data/dmp/frequency/</span></div></pre></td></tr></table></figure>
</li>
<li><p>NFS文件配置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master-zookeeper ~]<span class="comment"># vim /etc/exports</span></div><div class="line">/nfs-data/dmp/db-bak/ 192.168.159.*(rw,no_root_squash,sync,no_subtree_check)</div><div class="line">/nfs-data/dmp/data/ 192.168.159.*(rw,no_root_squash,sync,no_subtree_check)</div><div class="line">/nfs-data/dmp/frequency/ 192.168.159.*(rw,no_root_squash,sync,no_subtree_check)</div><div class="line">:wq(保存)</div></pre></td></tr></table></figure>
</li>
<li><p>使配置生效：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@master-zookeeper ~]<span class="comment"># exportfs -r</span></div></pre></td></tr></table></figure>
</li>
<li><p>启动:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master-zookeeper ~]<span class="comment"># systemctl start rpcbind</span></div><div class="line">[root@master-zookeeper ~]<span class="comment"># systemctl start nfs-server.service</span></div><div class="line">如果已经启动则重启：</div><div class="line">[root@master-zookeeper ~]<span class="comment"># systemctl restart rpcbind</span></div><div class="line">[root@master-zookeeper ~]<span class="comment"># systemctl restart nfs-server.service</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="三、客户端挂载（192-168-159-72、192-168-159-73）："><a href="#三、客户端挂载（192-168-159-72、192-168-159-73）：" class="headerlink" title="三、客户端挂载（192.168.159.72、192.168.159.73）："></a>三、客户端挂载（192.168.159.72、192.168.159.73）：</h5><ul>
<li><p>创建需要挂载的目录：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># mkdir –p /nfs-data/dmp/db-bak/ /nfs-data/dmp/data/ /nfs-data/dmp/frequency/</span></div></pre></td></tr></table></figure>
</li>
<li><p>测试挂载（两台客户端上执行以下命令）： </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@node02 ~]<span class="comment"># showmount -e 192.168.159.71</span></div><div class="line">Export list <span class="keyword">for</span> 192.168.159.71:</div><div class="line">/nfs-data/dmp/frequency 192.168.159.*</div><div class="line">/nfs-data/dmp/data      192.168.159.*</div><div class="line">/nfs-data/dmp/db-bak    192.168.159.*</div></pre></td></tr></table></figure>
</li>
<li><p>挂载服务器上的三个目录：<br>客户端在挂载的时候遇到的一个问题如下，可能是网络不太稳定，NFS默认是用UDP协议，换成TCP协议即可：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@node02 ~]<span class="comment">#  mount -t nfs 192.168.159.71:/nfs-data/dmp/db-bak /nfs-data/dmp/db-bak -o proto=tcp -o nolock</span></div><div class="line">[root@node02 ~]<span class="comment"># mount -t nfs 192.168.159.71:/nfs-data/dmp/data /nfs-data/dmp/data -o proto=tcp -o nolock</span></div><div class="line">[root@node02 ~]<span class="comment"># mount -t nfs 192.168.159.71:/nfs-data/dmp/frequency /nfs-data/dmp/frequency -o proto=tcp -o nolock</span></div><div class="line">[root@node02 ~]<span class="comment"># mount</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>两台客户端执行完以上命令后，在159.72上看挂载情况：<br>如果信息如上显示则应该是挂载成功!</p>
<h5 id="四、NFS加到启动项，让开机自动mount"><a href="#四、NFS加到启动项，让开机自动mount" class="headerlink" title="四、NFS加到启动项，让开机自动mount"></a>四、NFS加到启动项，让开机自动mount</h5><p>在两台客户端（192.168.159.72、192.168.159.73）上执行以下操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[root@node02 ~]<span class="comment"># vim /etc/fstab</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># /etc/fstab</span></div><div class="line"><span class="comment"># Created by anaconda on Fri Mar  4 23:01:47 2016</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Accessible filesystems, by reference, are maintained under '/dev/disk'</span></div><div class="line"><span class="comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span></div><div class="line"><span class="comment">#</span></div><div class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</div><div class="line">UUID=c1781921-85a8-4237-875c-8e4ebecf0e14 /boot                   xfs     defaults        0 0</div><div class="line">/dev/mapper/centos-home /home                   xfs     defaults        0 0</div><div class="line">/dev/mapper/centos-swap swap                    swap    defaults        0 0</div><div class="line">/dev/sda4 /nfs-data xfs nosuid,nodev,nofail,x-gvfs-show 0 0</div><div class="line">192.168.159.71:/nfs-data/dmp/db-bak/ /nfs-data/dmp/db-bak/ nfs auto,noatime,nolock,<span class="built_in">bg</span>,nfsvers=4,intr,tcp,actimeo=1800 0 0</div><div class="line">192.168.159.71:/nfs-data/dmp/data/ /nfs-data/dmp/data/ nfs auto,noatime,nolock,<span class="built_in">bg</span>,nfsvers=4,intr,tcp,actimeo=1800 0 0</div><div class="line">192.168.159.71:/nfs-data/dmp/frequency/ /nfs-data/dmp/frequency/ nfs auto,noatime,nolock,<span class="built_in">bg</span>,nfsvers=4,intr,tcp,actimeo=1800 0 0</div><div class="line">:wq(保存)</div></pre></td></tr></table></figure></p>
<p>上述的fstab中的配置：<br><strong>192.168.159.71:/nfs-data/dmp/db-bak/ /nfs-data/dmp/db-bak/ nfs auto,noatime,nolock,bg,nfsvers=4,intr,tcp,actimeo=1800 0 0</strong><br>的含义是：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>含意  </th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.159.71:/nfs-data/dmp/db-bak/</td>
<td>是目标NFS服务器的IP（或域名）和NFS共享的路径</td>
</tr>
<tr>
<td>/nfs-data/dmp/db-bak/</td>
<td>是NFS客户端要mount挂载的路径（一般挂载到/mnt下面某个路径，此处只是测试，就随便挂了）</td>
</tr>
<tr>
<td>nfs</td>
<td>表示挂载的文件系统类型时NFS </td>
</tr>
<tr>
<td>auto</td>
<td>自动挂载；</td>
</tr>
<tr>
<td>noatime</td>
<td>不要添加access time==上次访问文件时间</td>
</tr>
<tr>
<td>nolock</td>
<td>禁止文件加锁。有时候访问旧的NFS服务器需要此参数。</td>
</tr>
<tr>
<td>bg</td>
<td>挂载作为后台服务去运行，如果第一次挂载失败了。默认是off的。</td>
</tr>
<tr>
<td>nfsvers=4</td>
<td>指定NFS协议的版本。</td>
</tr>
<tr>
<td>intr</td>
<td>允许NFS请求被中断，如果服务器挂了或连不上</td>
</tr>
<tr>
<td>tcp</td>
<td>指定NFS（不适用默认的UDP而改用）TCP</td>
</tr>
<tr>
<td>actimeo=1800</td>
<td>acregmin==acregmax==acdirmin====acdirmax，都设置为1800s=30分钟，即文件缓存时间为30分钟</td>
</tr>
<tr>
<td>0</td>
<td>不需要NFS的CacheFS</td>
</tr>
<tr>
<td>0</td>
<td>不需要NFS的CacheFS</td>
</tr>
</tbody>
</table>
<p>本次测试通过以上测试，重启后，可以自动挂载</p>
<h4 id="对Mysql进行定时备份"><a href="#对Mysql进行定时备份" class="headerlink" title="对Mysql进行定时备份"></a>对Mysql进行定时备份</h4><h5 id="利用linux的定时器crontab对mysql进行定时备份"><a href="#利用linux的定时器crontab对mysql进行定时备份" class="headerlink" title="利用linux的定时器crontab对mysql进行定时备份"></a>利用linux的定时器crontab对mysql进行定时备份</h5><ul>
<li>crontab -e 是新建或者修改 -l是查看定时器<br> 通过NFS创建一个db-bak文件，做为异地备份传输（可存储在71、72、73这三台机器的/nfs-data/dmp/db-bak）。具体怎么操作，参考上面nfs网络文件系统搭建章节</li>
<li><p>在db-bak文件下创建一下备份的shell脚本，内容如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@node2 frequency]<span class="comment"># cat backupDmp.sh </span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#按时间生成变量strName作为文件名</span></div><div class="line">strName=`date +%Y-%m-%d-%H-%M-%S`</div><div class="line"><span class="comment">#在运行在docker环境的mysql中执行备份命令 </span></div><div class="line">docker <span class="built_in">exec</span> dmpmysql mysqldump -u root -p123456 device&gt;/nfs-data/dmp/db-bak/<span class="variable">$strName</span>-device.sql</div><div class="line">[root@node2 frequency]<span class="comment"># chmod +x backupDmp.sh  (修改执行权限)</span></div></pre></td></tr></table></figure>
</li>
<li><p>在执行以上脚本前，需要mysql容器把/nfs-data/dmp/db-bak/挂到到容器里。所以如果是已经启动的容器，请重新挂载该目录。(参考docker容器挂载目录)</p>
</li>
<li>加入到linux的crontab任务调度中<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@node2 frequency]<span class="comment"># crontab -e</span></div><div class="line"><span class="comment">#每隔两天，在2.30分钟执行一次</span></div><div class="line">30 2 */2 * * /nfs-data/dmp/db-bak/backupDmp.sh</div><div class="line"><span class="comment">#每三分钟执行一次</span></div><div class="line"><span class="comment">#*/3 * * * * /nfs-data/dmp/db-bak/backupDmp.sh</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>执行以上步骤后，数据备份会每隔两自动备份，并通过NFS异地备份到别的机器上</p>
<h4 id="Mysql定时删除上月备份"><a href="#Mysql定时删除上月备份" class="headerlink" title="Mysql定时删除上月备份"></a>Mysql定时删除上月备份</h4><ul>
<li><p>在db-bak文件下创建一下备份的shell脚本，内容如下:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@node2 frequency]<span class="comment"># vim backupDeleteDmp-Input.sh </span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#获取当前时间的上一个月的月份数据为daleteTime作为文件名</span></div><div class="line">deleteTime=`date <span class="_">-d</span> <span class="string">"last month"</span> +%Y-%m`</div><div class="line"><span class="comment">#执行删除上月备份的数据</span></div><div class="line">rm -rf <span class="variable">$deleteTime</span>*.sql</div><div class="line">[root@node2 frequency]<span class="comment"># chmod +x backupDeleteDmp-Input.sh  (修改执行权限)</span></div></pre></td></tr></table></figure>
</li>
<li><p>加入到linux的crontab任务调度中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@node2 frequency]<span class="comment"># crontab -e</span></div><div class="line"><span class="comment">#每隔月16号，在2.30分钟执行删除上月备份数据</span></div><div class="line">30 2 16 * * /nfs-data/dmp/db-bak/backupDeleteDmp-Input.sh</div></pre></td></tr></table></figure>
</li>
</ul>
<p>执行以上步骤后，数据备份会每个月16号会自动删除上月的备份，并通过NFS异地删除别的机器上的备份</p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程(七)-hexo-利用git多PC间同步博客]]></title>
      <url>http://www.troylc.cc/hexo/2016/06/29/Hexo-7.html</url>
      <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>如果是两PC，比如单位和家，同时都想更新blog。而由于hexo没有动态的后台，而且全部文件都在本地生成，所以如果在A电脑上发表了A1文章后，在B电脑上又写了篇B1文章，在B电脑上上传后你会发现只有B1文章而A1文章没了（因为B电脑上没有A1文章的md文件），所以多台电脑同时用来写文章的时候，需要解决文章同步问题。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>下面介绍的是如何利用第三方代码托管平台进行同步，以github为例：</p>
<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>在A电脑和B电脑上都安装git以及ssh密钥配置与连接，如果不会，可参考<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#%E5%AE%89%E8%A3%85Git" title="GIT安装">GIT安装</a>和<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#%E9%85%8D%E7%BD%AESSH%E5%AF%86%E9%92%A5" title="配置SSH密钥">配置SSH密钥</a></p>
<h4 id="同步最新的blog到github"><a href="#同步最新的blog到github" class="headerlink" title="同步最新的blog到github"></a>同步最新的blog到github</h4><p>建议先将拥有最新blog相关的文件的电脑上的文件上传到github上，否则在另一台电脑上下载时会有版本冲突，解决也比较麻烦。一般建议blog静态文件和blog源码文件分库存放，在PC上建立git ssh密钥连接和建立新库respo在此略过-参考：<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#%E6%B3%A8%E5%86%8CGithub%E8%B4%A6%E6%88%B7%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%A0%81%E5%BA%93" title="注册Github账户创建代码库">注册Github账户创建代码库</a></p>
<ul>
<li><p>编辑.gitignore文件：.gitignore文件作用是声明不被git记录的文件，blog根目录下的.gitignore是hexo初始化是创建的，可以直接编辑，建议.gitignore文件包括以下内容：<br>public内的文件可以根据source文件夹内容自动生成的，不需要备份。其他日志、压缩、数据库等文件也都是调试等使用，也不需要备份。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.DS_Store</div><div class="line">Thumbs.db</div><div class="line">db.json</div><div class="line">*.log</div><div class="line">node_modules/</div><div class="line">public/</div><div class="line">.deploy*/</div></pre></td></tr></table></figure>
</li>
<li><p>初始化仓库：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git init    </div><div class="line">git remote add origin &lt;server&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>server</strong>是仓库的在线目录地址，可以从github上直接复制过来，origin是本地分支，remote add会将本地仓库映射到托管服务器的github仓库上。</p>
<ul>
<li>添加本地文件到仓库并同步到git上：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add . <span class="comment">#添加blog目录下所有文件，注意有个'.'(.gitignore里面声明的文件不在此内)    </span></div><div class="line">git commit -m <span class="string">"hexo source first add"</span> <span class="comment">#添加更新说明    </span></div><div class="line">git push -u origin master  <span class="comment">#将本地origin分支推送更新到github上的master分支</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>至此，github库上已完成最新blog的同步上传。</p>
<h4 id="将github库的内容同步到另一台电脑"><a href="#将github库的内容同步到另一台电脑" class="headerlink" title="将github库的内容同步到另一台电脑"></a>将github库的内容同步到另一台电脑</h4><p>之前已经将最新的blog源码内容同步到了github仓库上，现在另一台电脑准备同步源码内容。注意，在同步前也要先建好<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#hexo%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85" title="hexo环境安装">hexo的环境</a>，不然把blog同步到本地后，无法运行hexo服务。在建好的环境的主目录(F:\Blog\hexo)运行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git init  <span class="comment">#将目录添加到版本控制系统中    </span></div><div class="line">git remote add origin &lt;server&gt;  <span class="comment">#同上    </span></div><div class="line">git fetch --all  <span class="comment">#将git上所有文件拉取到本地    </span></div><div class="line">git reset --hard origin/master  <span class="comment">#强制将本地内容指向刚刚同步git云端内容</span></div></pre></td></tr></table></figure></p>
<p><strong>reset</strong>对所拉取的文件不做任何处理，不用<strong>pull</strong>是因为本地尚有许多文件，使用pull会有一些版本冲突，解决起来也麻烦，而本地的文件都是初始化生成的文件，较github库里面的blog文件而言基本无用，所以可以直接丢弃覆盖。<br>至此在另一台电脑上也同步了最新的blog文件。</p>
<h4 id="实现博客在多电脑之间同步"><a href="#实现博客在多电脑之间同步" class="headerlink" title="实现博客在多电脑之间同步"></a>实现博客在多电脑之间同步</h4><p>假设上面的操作做完后，你相当于在公司电脑和家里电脑上，都拥有了最新blog文件，现在需要在不同的电脑间，更新同步blog，以实现多电脑之间blog同步：<br>比如我在这家里的电脑上创建了一篇新的文章C1，编写了一些内容，还没有编写完，如果想在单位电脑上<br>上继续在C1的基础上写，我们必需先在家里电脑上把C1上传到github上，运行以下命令，提交文章：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git add .   <span class="comment">#将所有更新的本地文件添加到版本控制系统中</span></div><div class="line">git status  <span class="comment">#查看本地文件的状态。然后对更改添加说明更推送到git托管库上</span></div><div class="line">git commit -m <span class="string">'更新信息说明'</span></div><div class="line">git push  <span class="comment">#把本地blog文件同步到github对应的库上。</span></div></pre></td></tr></table></figure></p>
<p>至此，家里电脑的blog最新的更新同步完成。<br>如果在公司电脑上再次对C1进行编辑，需先运行:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull <span class="comment">#下载同步github上的文件到本地。</span></div></pre></td></tr></table></figure></p>
<p>然后就可以在本地找到C1这篇文章了，至此多台电脑间同步博客内容就已经完成了</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://rainnie.me/2016/03/13/利用git-解决hexo博客多PC-间同步问题/" target="_blank" rel="external">利用git解决hexo博客多PC间同步问题</a></p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程(六)-hexo-jacman主题文章页优化]]></title>
      <url>http://www.troylc.cc/hexo/2016/06/28/Hexo-6.html</url>
      <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>上一篇对hexo博客基于jacman主题的首页页面的各项优化，本次为针对文章页的页面优化。<br>jacman主题优化之文章页优化,文章页的头尾及侧边栏和首页的一样，这里就不做说明了。主要说一下文章页中的文章内容部分的优化，顺序从上到下，从左到右进行优化</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p><img src="/images/hexo-5/article-context.png" alt="文章内容页"><br><img src="/images/hexo-5/article-context-3.png" alt="文章内容页"></p>
<h4 id="文章访问量、评论数"><a href="#文章访问量、评论数" class="headerlink" title="文章访问量、评论数"></a>文章访问量、评论数</h4><p>这里我添加到标题右下方，正文上面的地方。在themes\jacman\layout_partial\post\header.ejs中，找到<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"article-time"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"&lt;%= date_xml(item.date) %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"datePublished"</span>&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">datepublished</span>') %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.date.format</span>(<span class="attr">config.date_format</span>) %&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>增加如下内容：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"article-time"</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.duoshuo_shortname</span> &amp;&amp; <span class="attr">page.comments</span>)&#123; %&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"head-plus"</span>&gt;</span></div><div class="line">	     阅读次数<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次,</div><div class="line">	   <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"head-plus"</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-comments"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ds-thread-count"</span> <span class="attr">data-thread-key</span>=<span class="string">"&lt;%- page.path %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"&lt;%= date_xml(item.date) %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"datePublished"</span>&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">datepublished</span>') %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.date.format</span>(<span class="attr">config.date_format</span>) %&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>以上判断了是否开启多说评论，在<a href="http://www.troylc.cc/hexo/2016/06/27/Hexo-5.html" title="Hexo教程(五)-hexo博客jacman主题首页优化">前一篇文章</a>中我们已经有说过，多说评论数和网站的访问量，这里涉及到了文章的访问量，都是静态数据，不会对IP进行限制，一刷新就多一次访问量，因为在<a href="http://www.troylc.cc/hexo/2016/06/27/Hexo-5.html" title="Hexo教程(五)-hexo博客jacman主题首页优化">前一篇文章</a>中已经加载了记数的JS，所以这里只要放入显示位置就可以了</p>
<h4 id="修改文章页内分享"><a href="#修改文章页内分享" class="headerlink" title="修改文章页内分享"></a>修改文章页内分享</h4><p>用jiathis的站内分享：首页进入网站注册：<a href="http://www.jiathis.com" title="jiathis的站内分享" target="_blank" rel="external">http://www.jiathis.com</a>然后配置修改\themes\jacman_config.yml文件中的jiathis分享属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">jiathis:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">## if you use jiathis as your share tool,the built-in share tool won't be display.</span></div><div class="line">  id: 2103875   <span class="comment">## e.g. 1889330 your jiathis ID. </span></div><div class="line">  tsina: 2705524937 <span class="comment">## e.g. 2176287895 Your weibo id,It will be used in share button.</span></div></pre></td></tr></table></figure></p>
<p>默认jacman好像已经集成了这个分享，只是没有开启，如果你的主题里没有集成，看看在\hexo\themes\jacman\layout_partial\post目录是否有jiathis.ejs这个文件，如果有说明已经集成了，没有的话，可以自己添加集成上，在此目录下创建一个jiathis.ejs文件，内容为在jiathis分享上获取的代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.jiathis.enable</span>)&#123; %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jiathis_style_24x24"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_tsina"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_weixin"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_renren"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_qzone"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_googleplus"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_button_douban"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.jiathis.com/share"</span> <span class="attr">class</span>=<span class="string">"jiathis jiathis_txt jtico jtico_jiathis"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jiathis_counter_style"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> &gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> jiathis_config=&#123;</div><div class="line">    <span class="attr">data_track_clickback</span>:<span class="literal">true</span>,</div><div class="line">    <span class="attr">sm</span>:<span class="string">"copy,renren,cqq"</span>,</div><div class="line">    <span class="attr">pic</span>:<span class="string">"&lt;%- item.photos %&gt;"</span>,</div><div class="line">    <span class="attr">summary</span>:<span class="string">""</span>,</div><div class="line">    &lt;% <span class="keyword">if</span> (theme.jiathis.tsina)&#123; %&gt; ralateuid:&#123;<span class="string">"tsina"</span>:<span class="string">"&lt;%= theme.jiathis.tsina %&gt;"</span>&#125;,<span class="attr">hideMore</span>:<span class="literal">false</span>&#125;</div><div class="line">    &lt;% &#125; %&gt;</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//v3.jiathis.com/code/jia.js?uid=</span></span></div><div class="line">&lt;% if (theme.jiathis.id)&#123; %&gt;&lt;%= theme.jiathis.id %&gt;&lt;% &#125; %&gt;" <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>      </div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div></pre></td></tr></table></figure></p>
<p>在\hexo\themes\jacman\layout_partial\post目录下找到footer.ejs文件，在此文件添加判断：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (!<span class="attr">index</span>)&#123; %&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-share"</span> <span class="attr">id</span>=<span class="string">"share"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.jiathis.enable</span>)&#123; %&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"share-jiathis"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">jiathis</span>') %&gt;</span></div><div class="line">	 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123; %&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-url</span>=<span class="string">"&lt;%- item.permalink %&gt;"</span> <span class="attr">data-title</span>=<span class="string">"&lt;% if (item.title)&#123; %&gt;&lt;%= item.title %&gt; | &lt;% &#125; %&gt;&lt;%= config.title %&gt;"</span> <span class="attr">data-tsina</span>=<span class="string">"&lt;%= theme.author.tsina %&gt;"</span> <span class="attr">class</span>=<span class="string">"share clearfix"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div></pre></td></tr></table></figure></p>
<p>设置完成，可以到文章页内容下面看到分享的按钮。</p>
<h4 id="增加文章页的评论"><a href="#增加文章页的评论" class="headerlink" title="增加文章页的评论"></a>增加文章页的评论</h4><p>修改\themes\jacman下_config.yml中的duoshuo_shortname属性<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### Comment</span></div><div class="line">duoshuo_shortname: troylc   <span class="comment">## e.g. troylc   your duoshuo short name.</span></div><div class="line">disqus_shortname:     <span class="comment">## e.g. wuchong   your disqus short name.</span></div></pre></td></tr></table></figure></p>
<p>关于获取shoutname，shoutname不是登陆的用户昵称，而是多说首页点击我要安装，注册你的多说二级域名。去掉 .duoshuo.com 部分 就是你的shoutname，下图中troylc就是我的shoutname。<br><img src="/images/hexo-5/article-context-2.png" alt="多说安装"><br><img src="/images/hexo-5/article-context-1.png" alt="多说安装"></p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://tengj.top/2016/03/06/hexo干货系列：（三）hexo的Jacman主题优化/" title="hexo的Jacman主题优化" target="_blank" rel="external">hexo的Jacman主题优化</a><br><a href="http://www.tuicool.com/articles/FRrQvi3" title="Hexo博客Jacman主题的一些优化" target="_blank" rel="external">Hexo博客Jacman主题的一些优化</a></p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程(五)-hexo-jacman主题首页优化]]></title>
      <url>http://www.troylc.cc/hexo/2016/06/27/Hexo-5.html</url>
      <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>上一篇说到了hexo的博客被百度和google收录的方法，虽然搜索引擎是收录了，但是我在百度上搜索我文章的标题，还是没有搜索结果，结果只有首页一个。这个不知道是什么原因，有可能是百度索引量的问题，后续再观察，再折腾吧。下面来分享一下优化jacman主题，包括首页和文章页等，</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>jacman主题优化之首页优化,顺序从上到下，从左到右进行优化</p>
<h4 id="首页头部优化"><a href="#首页头部优化" class="headerlink" title="首页头部优化"></a>首页头部优化</h4><p><img src="/images/hexo-5/header.png" alt="头部header"></p>
<p>1.修改网站文字描述，修改hexo(F:\Blog\hexo_config.yml)主配置文件_config.yml中的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Site 网站</span></div><div class="line">title: troylc博客                   <span class="comment">#网站标题</span></div><div class="line">subtitle: 爱生活爱编程，一起来进步吧！  <span class="comment">#网站副标题</span></div><div class="line">description:  hello,every body!         <span class="comment">#网站描述</span></div><div class="line">author: troylc                          <span class="comment">#您的名字 </span></div><div class="line">language: zh-CN                         <span class="comment">#网站使用的语言</span></div><div class="line">timezone:                               <span class="comment">#网站时区。Hexo 默认使用您电脑的时区</span></div></pre></td></tr></table></figure></p>
<p>2.修改文章URL结构<br>默认文章链结是以: <a href="http://xxx.com/2016/06/06/your-title/" target="_blank" rel="external">http://xxx.com/2016/06/06/your-title/</a> 的格式，末尾没有.html结尾有点动态页面的感觉，对搜索引擎能否收录也是个问题，于是，我改成了 <a href="http://xxx.com/hexo/2016/03/18/hello-world.html" target="_blank" rel="external">http://xxx.com/hexo/2016/03/18/hello-world.html</a> 这样的格式，具体方法是在 根目录(F:\Blog\hexo_config.yml)下的_config.yml文件里:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#permalink: :year/:month/:day/:title/</span></div><div class="line">permalink: :category/:year/:month/:day/:title.html</div></pre></td></tr></table></figure></p>
<p>3.开启URL目录映射<br>如果你的分类是中文的，在url中也会显示相应的中文，为了在URL尽量少出现中文，做以下修改，方法是在_config.yml 下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Category &amp; Tag  分类和标签的设置</div><div class="line">default_category: uncategorized   #默认分类         </div><div class="line">category_map:                     #分类别名 category_map 是为了让url中尽量少出现中文，做的映射。如下配置</div><div class="line">    心得: experience</div><div class="line">#    生活: life</div><div class="line">#    其他: other</div><div class="line">tag_map:                          #标签别名</div></pre></td></tr></table></figure></p>
<p>其中, category_map，tag_map 是为了让url中尽量少出现中文，做的映射。<br>例如:<br>在文章开头，标柱目录为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> ---</div><div class="line">xxx: xxx</div><div class="line">categories: 心得</div><div class="line"> ---</div></pre></td></tr></table></figure></p>
<p>则在url中， 会变成: <a href="http://xxx.com/experience/year/month/day/xxx.html" target="_blank" rel="external">http://xxx.com/experience/year/month/day/xxx.html</a></p>
<p>4.修改网站小图标、博客logo,在jacman(F:\Blog\hexo\themes\jacman)主题目录下的配置文件_config.yml,找到以下配置,指定favicon，imglogo的图片位置，或者把原本对应位置下的图片名称不变，直接换成自己喜欢的图片<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### Image</span></div><div class="line">imglogo:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>             <span class="comment">## display image logo true/false. 是否显示logo</span></div><div class="line">  src: img/logo.png        <span class="comment">## `.svg` and `.png` are recommended,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">favicon: img/favicon.ico   <span class="comment">## size:32px*32px,`.ico` is recommended,please put image into the theme folder `/jacman/source/img`.     </span></div><div class="line">apple_icon: img/jacman.jpg <span class="comment">## size:114px*114px,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">author_img: img/author.jpg <span class="comment">## size:220px*220px.display author avatar picture.if don't want to display,please don't set this.</span></div><div class="line">banner_img: <span class="comment">#img/banner.jpg ## size:1920px*200px+. Banner Picture</span></div><div class="line"><span class="comment">### Theme Color </span></div><div class="line">theme_color:          <span class="comment">##主题颜色</span></div><div class="line">    theme: <span class="string">'#2ca6cb'</span>    <span class="comment">##the defaut theme color is blue</span></div></pre></td></tr></table></figure></p>
<p>5.首页头部的菜单menu 默认没有启用 /tags 和 /categories 页面，如果需要启用请在博客目录下的(F:\Blog\hexo\source)source文件夹中分别建立tags和categories文件夹每个文件夹中分别包含一个index.md文件。内容为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> ---</div><div class="line">layout: tags (或categories)</div><div class="line">title: tags (或categories)</div><div class="line"> ---</div></pre></td></tr></table></figure></p>
<p>在jacman(F:\Blog\hexo\themes\jacman_config.yml)主题目录下的配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##### Menu</span></div><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  archives: /archives</div><div class="line"><span class="comment">##  life: /life</span></div><div class="line"><span class="comment">##  about: /about</span></div><div class="line"><span class="comment">## you can create `tags` and `categories` folders in `../source`.</span></div><div class="line"><span class="comment">## And create a `index.md` file in each of them.</span></div><div class="line"><span class="comment">## set `front-matter`as</span></div><div class="line"><span class="comment">## layout: tags (or categories)</span></div><div class="line"><span class="comment">## title: tags (or categories)</span></div><div class="line"><span class="comment">## ---</span></div></pre></td></tr></table></figure></p>
<p>6.增加百度站内搜索-<a href="http://zn.baidu.com/cse/wiki/index?category_id=25" title="百度站内搜索-极速体验版本" target="_blank" rel="external">极速体验版本</a><br>在百度站内搜索-帮助中心-极速体验版中填空站内搜索代码，获取搜索展示代码，放在(F:\Blog\hexo\themes\jacman\layout_partial\header.ejs):<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;% &#125; else if(theme.baidu_search.enable)&#123; %&gt;</div><div class="line">   &lt;form class="search" action="&lt;%- theme.baidu_search.site %&gt;" target="_blank"&gt;</div><div class="line">    &lt;label&gt;Search&lt;/label&gt;</div><div class="line">    &lt;input name="cc" type="hidden" value= &lt;%= theme.baidu_search.id %&gt; &gt;&lt;input type="text" name="q" size="30" placeholder="&lt;%= __('search') %&gt;"&gt;&lt;br&gt;</div><div class="line">  &lt;/form&gt;</div><div class="line">&lt;% &#125; else if(theme.swift_search.enable)&#123; %&gt;</div></pre></td></tr></table></figure></p>
<p>再修改F:\Blog\hexo\themes\jacman_config.yml文件中的百度搜索属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">baidu_search:     <span class="comment">## http://zn.baidu.com/  极速体验版本http://zn.baidu.com/cse/wiki/index?category_id=25</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  id: troylc.cc  <span class="comment">## e.g. "troylc.cc"  for your baidu search webname</span></div><div class="line">  site: http://zhannei.baidu.com/cse/site  <span class="comment">## your can change to your site instead of the default site</span></div></pre></td></tr></table></figure></p>
<p>百度搜索极速检验版，需要百度搜索引擎收录你的网站，具体参考<a href="http://www.troylc.cc/hexo/2016/06/16/Hexo-4.html" title="搜索引擎收录网站">《Hexo教程(四)-hexo博客被搜索引擎收录》</a></p>
<h4 id="首页内容部分优化"><a href="#首页内容部分优化" class="headerlink" title="首页内容部分优化"></a>首页内容部分优化</h4><p><img src="/images/hexo-5/index-context.png" alt="内容部分优化"></p>
<h5 id="首页文章列表的优化"><a href="#首页文章列表的优化" class="headerlink" title="首页文章列表的优化"></a>首页文章列表的优化</h5><p>1.文章列表的展示方式，默认是全部展开，感觉展示文章全部内容比较没有吸引力，我关闭掉了，只展示少量摘要。修改\themes\jacman下面_config.yml中的expand改成false即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">index:</div><div class="line">  expand: <span class="literal">false</span>    <span class="comment">## default is unexpanding,so you can only see the short description of each post.</span></div><div class="line">  excerpt_link: Read More</div></pre></td></tr></table></figure></p>
<p>2.文章列表的展示形式，修改成列表模式，并在每一格列表的头显示标题，中间显示文章的摘要，尾显示发布时间，分类，标签，及评论数。修改F:\java\githubPages\Blog\hexo\themes\jacman\layout_partial\article.ejs文件中的以下部分：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"post"</span> <span class="attr">itemscope</span> <span class="attr">itemprop</span>=<span class="string">"blogitem"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">item.link</span>) &#123; %&gt;</span> </div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- item.link %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> </div><div class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span>&#123; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= item.title %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">itemprop</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">desc</span>)&#123; %&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">item.description</span>)&#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.description</span> %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> <span class="attr">if</span>(<span class="attr">item.excerpt</span>)&#123; %&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">strip_html</span>(<span class="attr">item.excerpt</span>)<span class="attr">.replace</span>(/^\<span class="attr">s</span>*/, '')<span class="attr">.replace</span>(/\<span class="attr">s</span>*$/, '')<span class="attr">.substring</span>(<span class="attr">0</span>, <span class="attr">140</span>) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123;%&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">strip_html</span>(<span class="attr">item.content</span>)<span class="attr">.replace</span>(/^\<span class="attr">s</span>*/, '')<span class="attr">.replace</span>(/\<span class="attr">s</span>*$/, '')<span class="attr">.substring</span>(<span class="attr">0</span>, <span class="attr">140</span>) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"&lt;%= date_xml(item.date) %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"datePublished"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.date.format</span>(<span class="attr">config.date_format</span>) %&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span>            </div><div class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>修改为：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"post-expand &lt;%= item.layout %&gt;"</span>" <span class="attr">itemprop</span>=<span class="string">"articleBody"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">header-index</span>') %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"padding: 0.5em 0.5em 0.5em 0.8em"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">item.link</span>) &#123; %&gt;</span> </div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- item.link %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> </div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span>&#123; %&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= item.title %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">desc</span>)&#123; %&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">item.description</span>)&#123; %&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">item.description</span> %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> <span class="attr">if</span>(<span class="attr">item.excerpt</span>)&#123; %&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">strip_html</span>(<span class="attr">item.excerpt</span>)<span class="attr">.replace</span>(/^\<span class="attr">s</span>*/, '')<span class="attr">.replace</span>(/\<span class="attr">s</span>*$/, '')<span class="attr">.substring</span>(<span class="attr">0</span>, <span class="attr">240</span>) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123;%&gt;</span></div><div class="line">               <span class="tag">&lt;<span class="name">p</span> <span class="attr">itemprop</span>=<span class="string">"description"</span> &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">strip_html</span>(<span class="attr">item.content</span>)<span class="attr">.replace</span>(/^\<span class="attr">s</span>*/, '')<span class="attr">.replace</span>(/\<span class="attr">s</span>*$/, '')<span class="attr">.substring</span>(<span class="attr">0</span>, <span class="attr">240</span>) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">footer-index</span>', &#123;<span class="attr">index:</span> <span class="attr">true</span>&#125;) %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>在当前目录下的post目录里增加三个文件catetags-index.ejs,footer-index.ejs,header-index.ejs<br>catetags-index.ejs 内容:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;div class="article-catetags"&gt;</div><div class="line">&lt;% if (item.categories &amp;&amp; item.categories.length)&#123; %&gt;</div><div class="line">&lt;div style="float: left;padding: 0.5em 0;margin-right: 3em;margin-top: 0.3em;"&gt;</div><div class="line">    &lt;time datetime="&lt;%= date_xml(item.date) %&gt;" itemprop="datePublished"&gt; &lt;%= __('datepublished') %&gt; &lt;%= item.date.format(config.date_format) %&gt;&lt;/time&gt;</div><div class="line">    By&lt;% if(theme.author.google_plus)&#123; %&gt;</div><div class="line">        &lt;a href="https://plus.google.com/&lt;%=theme.author.google_plus %&gt;?rel=author" title="&lt;%= config.author %&gt;" target="_blank" itemprop="author"&gt;&lt;%= config.author %&gt;&lt;/a&gt;</div><div class="line">        &lt;% &#125;else&#123; %&gt;</div><div class="line">        &lt;a href="&lt;%= config.root %&gt;about" title="&lt;%= config.author %&gt;" target="_blank" itemprop="author"&gt;&lt;%= config.author %&gt;&lt;/a&gt;</div><div class="line">        &lt;% &#125; %&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div class="article-categories"&gt;</div><div class="line">  &lt;span&gt;&lt;/span&gt;</div><div class="line">  &lt;%- list_categories(item.categories, &#123;</div><div class="line">      show_count: false,</div><div class="line">      class: 'article-category',</div><div class="line">      style: 'none',</div><div class="line">      separator: '►'</div><div class="line">  &#125;) %&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div><div class="line">&lt;% if (item.tags &amp;&amp; item.tags.length)&#123; %&gt;</div><div class="line">  &lt;div class="article-tags"&gt;</div><div class="line">  &lt;% var tags = [];</div><div class="line">    item.tags.forEach(function(tag)&#123;</div><div class="line">      tags.push('&lt;a href="' + config.root + tag.path + '"&gt;' + tag.name + '&lt;/a&gt;');</div><div class="line">    &#125;); %&gt;</div><div class="line">  &lt;span&gt;&lt;/span&gt; &lt;%- tags.join('') %&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>footer-index.ejs 内容:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"article-footer clearfix"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">catetags-index</span>') %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (!<span class="attr">index</span>)&#123; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-share"</span> <span class="attr">id</span>=<span class="string">"share"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.jiathis.enable</span>)&#123; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"share-jiathis"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">jiathis</span>') %&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-url</span>=<span class="string">"&lt;%- item.permalink %&gt;"</span> <span class="attr">data-title</span>=<span class="string">"&lt;% if (item.title)&#123; %&gt;&lt;%= item.title %&gt; | &lt;% &#125; %&gt;&lt;%= config.title %&gt;"</span> <span class="attr">data-tsina</span>=<span class="string">"&lt;%= theme.author.tsina %&gt;"</span> <span class="attr">class</span>=<span class="string">"share clearfix"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">index</span>)&#123; %&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comments-count"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>((<span class="attr">config.disqus_shortname</span> || <span class="attr">theme.disqus_shortname</span>) &amp;&amp; !<span class="attr">theme.duoshuo_shortname</span>) &#123; %&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;#disqus_thread"</span> <span class="attr">class</span>=<span class="string">"comments-count-link"</span>&gt;</span>Comments<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> <span class="attr">if</span>(<span class="attr">theme.duoshuo_shortname</span>) &#123; %&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;#comments"</span> <span class="attr">class</span>=<span class="string">"ds-thread-count comments-count-link"</span> <span class="attr">data-thread-key</span>=<span class="string">"&lt;%- item.path %&gt;"</span> <span class="attr">data-count-type</span>=<span class="string">"comments"</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>header-index.ejs 内容:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"article-info clearfix"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">itemprop</span>=<span class="string">"name"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">item.link</span>) &#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- item.link %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"&lt;%= item.title %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123; %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- item.path %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= item.title %&gt;"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">item.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>调整对应的样式：<br>具体:<br>    1.\jacman\source\css_partial\index.styl<br>    2.\jacman\source\css_partial\footer.styl<br>    3.\jacman\source\css_partial\article.styl<br>    4.\jacman\source\css_partial\helper.styl<br>我主要调整了以上四个文件中的样式，具体各位自己找着改吧。太多了，我也是通过firefox的firebug工具慢慢找得。</p>
<p>3.文章列表分页条数限制（含首页文章列表页，分类列表页，标签列表页）修改hexo(F:\Blog\hexo_config.yml)主配置文件_config.yml中的：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Others</span></div><div class="line">index_generator:</div><div class="line">  per_page: 5 <span class="comment">##首页默认10篇文章标题 如果值为0不分页</span></div><div class="line">archive_generator:</div><div class="line">    per_page: 0 <span class="comment">##归档页面默认10篇文章标题</span></div><div class="line">    yearly: <span class="literal">true</span>  <span class="comment">##生成年视图</span></div><div class="line">    monthly: <span class="literal">true</span> <span class="comment">##生成月视图</span></div><div class="line">tag_generator:</div><div class="line">    per_page: 0 <span class="comment">##标签分类页面默认10篇文章</span></div><div class="line">category_generator: </div><div class="line">    per_page: 0 <span class="comment">###分类页面默认10篇文章</span></div><div class="line">feed:</div><div class="line">    <span class="built_in">type</span>: atom <span class="comment">##feed类型 atom或者rss2</span></div><div class="line">    path: atom.xml <span class="comment">##feed路径</span></div><div class="line">    <span class="built_in">limit</span>: 20  <span class="comment">##feed文章最小数量</span></div></pre></td></tr></table></figure></p>
<h5 id="首页内容侧边栏优化"><a href="#首页内容侧边栏优化" class="headerlink" title="首页内容侧边栏优化"></a>首页内容侧边栏优化</h5><p>侧边栏顺序配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### Widgets  首页侧边栏</span></div><div class="line">widgets: </div><div class="line">- github-card</div><div class="line">- category</div><div class="line">- tag</div><div class="line">- hot</div><div class="line">- tagcloud</div><div class="line">- links</div><div class="line"><span class="comment">#- douban</span></div><div class="line">- weibo</div><div class="line">- rss</div><div class="line">  <span class="comment">## provide eight widgets:github-card,category,tag,rss,archive,tagcloud,links,weibo</span></div></pre></td></tr></table></figure></p>
<p>1.github名片，友情链接,RSS订阅，在<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html#%E5%AE%89%E8%A3%85Hexo%E6%8F%92%E4%BB%B6">Hexo教程(一)-hexo环境搭建</a>中的安装插件时，安装RSS插件. 在jacman(F:\Blog\hexo\themes\jacman)主题目录下的配置文件_config.yml,找到以下配置,并修改如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">author:</div><div class="line">  intro_line1:  <span class="string">"Hello ,I'm troylc Page in github."</span>    <span class="comment">## your introduction on the bottom of the page</span></div><div class="line">  intro_line2:  <span class="string">"This is my blog,believe it or not."</span>  <span class="comment">## the 2nd line</span></div><div class="line">  ...</div><div class="line">  github: xxxx     <span class="comment">## e.g. 配置你对应的github用户名</span></div><div class="line">  ...</div><div class="line"><span class="comment">##----------------------------------------------------------------------------</span></div><div class="line"><span class="comment">#### RSS  RSS订阅 </span></div><div class="line">rss: /atom.xml <span class="comment">## RSS address.</span></div><div class="line"><span class="comment">##----------------------------------------------------------------------------</span></div><div class="line"><span class="comment">#### Links</span></div><div class="line">links:</div><div class="line">  攻城狮: http://www.troylc.cc/, 一个面向程序员交流分享的博客</div><div class="line">  troylc<span class="string">'s Blog: http://www.troylc.cc/</span></div></pre></td></tr></table></figure></p>
<p>2.分类，标签，标签云，这几个只有在创建文章中写上分类和标签，就会在此处自动显示分类，标签，标签云，以分类和标签的文章个数。</p>
<p>3.热评文章、我的微博<br><strong>热评文章：</strong><br>由于hexo没有内置诸如“热评文章”，“最新评论”等的widget，那么只能自定义widget,仿照其他的widget，在themes的_config.yml文件中的widgets下添加自定义widget的名称，如上面我添加了一个hot，然后在F:\Blog\hexo\themes\jacman\layout_widget目录下新建一个hot.ejs，在<a href="http://duoshuo.com/" title="多说网站" target="_blank" rel="external">多说</a>(如果没有多说账号就注册一个，后续文章页的文章评论也会用到)-&gt;后台管理-&gt;工具-&gt;热评文章中获取代码，写到hot.ejs文件中，然后在其上面写上名字“热评文章”，如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 国际化文件(F:\Blog\hexo\themes\jacman\languages\zh-CN.yml)定义hot --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"asidetitle"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">hot</span>') %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 多说热评文章 start --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ds-top-threads"</span> <span class="attr">data-range</span>=<span class="string">"daily"</span> <span class="attr">data-num-items</span>=<span class="string">"5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 多说热评文章 end --&gt;</span></div><div class="line"><span class="comment">&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="keyword">var</span> duoshuoQuery = &#123;<span class="attr">short_name</span>:<span class="string">"troylc"</span>&#125;;</div><div class="line">	(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">		ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</div><div class="line">		ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</div><div class="line">		ds.charset = <span class="string">'UTF-8'</span>;</div><div class="line">		(<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </div><div class="line">		 || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</div><div class="line">	&#125;)();</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 多说公共JS代码 end --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>我的微博-微博秀</strong><br>需要注意的是，如果要启用微博秀，您必须填上author属性下tsina和weibo_verifier的值，前者是您微博ID，后者是您微博秀的验证码，登录新浪微博后，访问 <a href="http://app.weibo.com/tool/weiboshow" title="微博秀" target="_blank" rel="external">http://app.weibo.com/tool/weiboshow</a> 在如下图位置，可以获得您的 verifier，如：我的是0f3h06c8。<br><img src="/images/hexo-5/index-context-2.png" alt="内容侧边栏-微博秀"><br>在jacman(F:\Blog\hexo\themes\jacman)主题目录下的配置文件_config.yml,找到以下配置,并修改如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">author:</div><div class="line">  ...</div><div class="line">  weibo_verifier: 0f3h06c8    <span class="comment">## e.g. 0f81d6c8 Your weibo-show widget verifier ,if you use weibo-show it is needed.</span></div><div class="line">  tsina: 2705522637      <span class="comment">## e.g. 2705522637  Your weibo ID,It will be used in share button.</span></div><div class="line">  weibo: 2705522637     <span class="comment">## e.g. troylc or 2705522637 for http://weibo.com/2705522637</span></div><div class="line">  ...</div></pre></td></tr></table></figure></p>
<p>第一次不知道是什么原因，要么无法显示，要么显示出现问题，耐心的多刷新，或者等待几天再去刷新。</p>
<h4 id="首页footer优化"><a href="#首页footer优化" class="headerlink" title="首页footer优化"></a>首页footer优化</h4><p><img src="/images/hexo-5/footer.png" alt="尾部footer"><br>1.修改网站的主页的头和尾的英文字体：\hexo\themes\jacman\source\css_base\variable.styl中的font-custom-family = “covered_by_your_graceregular”修改为inherit如下:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//Font</div><div class="line">font-default = "Helvetica Neue", "Helvetica","Microsoft YaHei", "WenQuanYi Micro Hei",Arial, sans-serif</div><div class="line">font-serif = "Georgia", serif</div><div class="line">font-mono = Monaco, Menlo, Consolas, Courier New, monospace</div><div class="line">font-custom-family = inherit  //英文字体inherit</div><div class="line">font-custom-filename = coveredbyyourgrace-webfont</div><div class="line">font-icon-family = "FontAwesome"</div><div class="line">font-icon-filename = fontawesome-webfont</div><div class="line">font-icon-version = "4.0.3"</div><div class="line">font-icon-diao = "fontdiao"</div><div class="line">font-icon-diao-filename = "fontdiao"</div><div class="line">font-icon-diao-version = "0.0.8"</div><div class="line">ShowCustomFont = hexo-config("ShowCustomFont")</div><div class="line">font-size = 100%</div><div class="line">line-height = 1.5</div><div class="line">//image</div><div class="line">author-img = hexo-config("author_img")</div></pre></td></tr></table></figure></p>
<p>2.尾部的作者图片，在上面头部优化中，有提到，在jacman(F:\Blog\hexo\themes\jacman)主题目录下的配置文件_config.yml,找到以下配置,指定author_img的图片位置，或者把原本对应位置下的图片名称不变，直接换成自己喜欢的图片<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### Image</span></div><div class="line">imglogo:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>             <span class="comment">## display image logo true/false. 是否显示logo</span></div><div class="line">  src: img/logo.png        <span class="comment">## `.svg` and `.png` are recommended,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">favicon: img/favicon.ico   <span class="comment">## size:32px*32px,`.ico` is recommended,please put image into the theme folder `/jacman/source/img`.     </span></div><div class="line">apple_icon: img/jacman.jpg <span class="comment">## size:114px*114px,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">author_img: img/author.jpg <span class="comment">## size:220px*220px.display author avatar picture.if don't want to display,please don't set this.</span></div><div class="line">banner_img: <span class="comment">#img/banner.jpg ## size:1920px*200px+. Banner Picture</span></div><div class="line"><span class="comment">### Theme Color </span></div><div class="line">theme_color:          <span class="comment">##主题颜色</span></div><div class="line">    theme: <span class="string">'#2ca6cb'</span>    <span class="comment">##the defaut theme color is blue</span></div></pre></td></tr></table></figure></p>
<p>3.添加网站的总pv计数和总uv计数<br>在F:\Blog\hexo\themes\jacman\layout_partial\footer.ejs中最后面添加脚本和总pv计数和总uv计数：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span></div><div class="line">      Total visits: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></div><div class="line">    You are Visiter No.<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://wuchong.me/blog/2014/11/20/how-to-use-jacman/" title="如何使用 Jacman 主题 " target="_blank" rel="external">如何使用 Jacman 主题</a><br><a href="http://www.tuicool.com/articles/FRrQvi3" title="Hexo博客Jacman主题的一些优化" target="_blank" rel="external">Hexo博客Jacman主题的一些优化</a></p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程(四)-hexo博客被搜索引擎收录]]></title>
      <url>http://www.troylc.cc/hexo/2016/06/16/Hexo-4.html</url>
      <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>现在我们的博客搭起来了，也写了几篇博文，但是各大搜索引擎还是搜索不到你写的文章，如何查看是否被搜索引擎收录，如何设置博客被搜索引擎收录，如何让搜索引擎能及时的搜索到你的文章，这篇就来和大家一起填坑</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>下面准备分别介绍谷歌和百度如何提交搜索引擎，其中有一些共同的地方，这里先说明：</p>
<h4 id="确认博客是否被收录"><a href="#确认博客是否被收录" class="headerlink" title="确认博客是否被收录"></a>确认博客是否被收录</h4><p>在百度或者谷歌上面输入下面格式来判断，如果能搜索到就说明被收录，否则就没有，用你的域名替代我的<br>输入：site:troylc.cc<br><img src="/images/hexo-3/google-troylc.png" alt="查看google是否收录"><br><img src="/images/hexo-3/baidu-troylc.png" alt="查看baidu是否收录"><br>我这里是已经做完了，在写这篇文章的，所以显示已经收录了</p>
<h4 id="验证博客网站"><a href="#验证博客网站" class="headerlink" title="验证博客网站"></a>验证博客网站</h4><p>两个搜索引擎入口：<br><a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" title="Google搜索引擎提交入口" target="_blank" rel="external">Google搜索引擎提交入口</a><br><a href="http://zhanzhang.baidu.com/linksubmit/url" title="百度搜索引擎入口" target="_blank" rel="external">百度搜索引擎入口</a><br>如果没有对应的账号，请对应的注册相应的账号：<br><img src="/images/hexo-3/baidu-create.png" alt="添加百度验证博客网站"><br><img src="/images/hexo-3/google-create1.png" alt="添加google验证博客网站"><br><img src="/images/hexo-3/google-create2.png" alt="添加google验证博客网站"><br>不管谷歌还是百度都要先添加域名，然后验证网站，这里统一都使用文件验证，就是下载对应的html文件，放到域名根目录下，也就收博客根目录下的source下面<br><img src="/images/hexo-3/hexo-verify-file.png" alt="查看本地hexo验证文件"><br>然后部署到服务器,输入地址：<a href="http://www.troylc.cc/googlecb7f6bfb684c40c5.html">http://www.troylc.cc/googlecb7f6bfb684c40c5.html</a> 能访问到就可以点验证按钮。<br><code>注</code>：这个验证的时候，google有可能会失败，可以等个一两天，再去验证，就好了。</p>
<h4 id="生成站点地图sitemap"><a href="#生成站点地图sitemap" class="headerlink" title="生成站点地图sitemap"></a>生成站点地图sitemap</h4><p>站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站。<br>先安装一下插件，打开你的hexo博客根目录，分别用下面两个命令来安装针对谷歌和百度的插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div><div class="line">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure></p>
<p>编译你的博客<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g</div></pre></td></tr></table></figure></p>
<p>如果在你的博客根目录的public下面生成了sitemap.xml以及baidusitemap.xml就表示成功了。<br>这时候sitemap.xml跟baidusitemap.xml里面的内容有点相似.<br>部署后你分别访问<br><a href="http://www.troylc.cc/sitemap.xml">http://www.troylc.cc/sitemap.xml</a><br><a href="http://www.troylc.cc/baidusitemap.xml">http://www.troylc.cc/baidusitemap.xml</a></p>
<h4 id="收录hexo博客"><a href="#收录hexo博客" class="headerlink" title="收录hexo博客"></a>收录hexo博客</h4><h5 id="让谷歌收录我们的博客"><a href="#让谷歌收录我们的博客" class="headerlink" title="让谷歌收录我们的博客"></a>让谷歌收录我们的博客</h5><p>谷歌操作比较简单，就是向Google站长工具提交sitemap<br>登录Google账号，添加了站点验证通过后，选择站点，之后在抓取——站点地图中就能看到添加/测试站点地图，如下图：<br><img src="/images/hexo-3/google-sitemap.png" alt="谷歌收录我们的博客"><br>谷歌提交过了一两天就能搜索到博客了。</p>
<h5 id="让百度收录我们的博客"><a href="#让百度收录我们的博客" class="headerlink" title="让百度收录我们的博客"></a>让百度收录我们的博客</h5><p>相比google百度操作可能比较麻烦一点：这里是百度介绍的几种主动提交博客文章链接的方式：<br>如何选择链接提交方式</p>
<ol>
<li>主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</li>
<li>自动推送：最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。</li>
<li>sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。</li>
<li>手动提交：一次性提交链接给百度，可以使用此种方式。<br>从效率上来说：主动推送&gt;自动推送&gt;sitemap<br>这里介绍自动推送和sitemap提交方式：  </li>
</ol>
<p><strong>自动推送：</strong><br><img src="/images/hexo-3/baidu-zd1.png" alt="百度自动推送"><br><img src="/images/hexo-3/baidu-zd2.png" alt="百度自动推送"><br>自动推送是百度站长平台为提高站点新增网页发现速度推出的工具，安装自动推送JS代码的网页，在页面被访问时，页面URL将立即被推送给百度<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</div><div class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</div><div class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</div><div class="line">    s.parentNode.insertBefore(bp, s);</div><div class="line">&#125;)();</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>我是放在\themes\jacman\layout_partial\after_footer.ejs中，添加到下面就行。</p>
<p><strong>sitemap提交:</strong><br>直接提交<a href="http://www.troylc.cc/baidusitemap.xml">http://www.troylc.cc/baidusitemap.xml</a> 就行，看下图。<br><img src="/images/hexo-3/baidu-sitemaptj.png" alt="百度自动推送"></p>
<p>至此我们的博客已经被百度与google这样的搜索引擎收录，如果出现无法收录，可以过几天再登录看看结果</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://tengj.top/2016/03/14/hexo6seo/" target="_blank" rel="external">hexo提交搜索引擎（百度+谷歌）</a></p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程(三)-hexo博客同时托管到github和coding]]></title>
      <url>http://www.troylc.cc/hexo/2016/06/15/Hexo-3.html</url>
      <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>之前已经把hexo部署到github，但是有时候挺慢的，于是就像跟大家一样搞到国内的coding.net上，申请coding的邮箱尽量与github使用同一个邮箱，这样配置ssh就省了事情，不用配置两个ssh了</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="coding配置"><a href="#coding配置" class="headerlink" title="coding配置"></a>coding配置</h4><p>基本流程跟github一样，都是先申请帐号。这里需要说一下的是，申请coding的邮箱尽量与github使用同一个邮箱，这样配置ssh就省了事情，不用配置两个ssh了。<br><img src="/images/hexo-4/coding.png" alt="coding网站"><br>ssh对接基本和github一样，如果之前生成过ssh的话，就可以直接使用，一般存放在~/.ssh/id_rsa.pub。如果没有的话，那就下面几步就可以了,参考：<a href="http://www.troylc.cc/hexo/2016/05/31/Hexo%E6%95%99%E7%A8%8B2.html#%E9%85%8D%E7%BD%AESSH%E5%AF%86%E9%92%A5">Hexo教程(一)-hexo环境搭建</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -b4096 -C <span class="string">"你的邮箱"</span></div></pre></td></tr></table></figure></p>
<p><img src="/images/hexo-4/coding-ssh.png" alt="coding网站"><br><strong>新建项目</strong><br>直接新建一个coding项目，需要注意就是：项目名尽量与用户名一样，这样可以省去后续的一些麻烦.设置为公有的项目，其余的都不用动，直接默认就行了。</p>
<h4 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h4><p>新建好了coding的项目之后，修改一下站点的根目录配置文件_config.yml,找到deploy位置，修改如下:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: </div><div class="line">      github: git@github.com:xxxx/xxxxx.github.io.git</div><div class="line">      coding: git@git.coding.net:xxxx/xxxxx.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>如果都是master分支，所以两个写到一起了，如果不是同一个分支的话，可以如下的写法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository:</div><div class="line">      github: git@github.com:xxxx/xxxxx.github.io.git,分支名称</div><div class="line">      coding: git@git.coding.net:xxxx/xxxxx.git,分支名称</div></pre></td></tr></table></figure></p>
<p>其实就是在原来的基础再加一个就好了。只需要把repo的地址改成自己对应项目的就好。<br>还有一步，就是在博客的source/目录下需要创建一个空白文件,至于原因，是因为 coding.net需要这个文件来作为以静态文件部署的标志。就是说看到这个Staticfile就知道按照静态文件来发布。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> <span class="built_in">source</span></div><div class="line">$ touch Staticfile  <span class="comment">#名字必须是Staticfile</span></div></pre></td></tr></table></figure></p>
<p>现在可以deploy了:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo d -g</div></pre></td></tr></table></figure></p>
<p>会看到有两个发布。发布完成之后，还需要托管coding.net上。</p>
<p><strong>coding使用Pages部署</strong><br>这种方式的话，可以绑定自己的域名。就跟Github Pages一样。项目名字必须与coding的用户名一致!!!只需要在如下:<br><img src="/images/hexo-4/coding-pages.png" alt="coding网站"><br>因为前面配置的分支是master,因此开启之后，也需要是master。然后看起之后就可访问了,下面两个链接都可以访问<br><code>http://troylc.coding.me/troylc</code><br><code>http://troylc.coding.me/</code></p>
<h4 id="绑定域名："><a href="#绑定域名：" class="headerlink" title="绑定域名："></a>绑定域名：</h4><p>在万网上面购买了troylc.cc域名，三年只要50多块，个人用的就不用com这种超级贵的域名了。现在要实现国内的走coding，海外的走github，只要配置2个CNAME就行(详细参考：<a href="https://wanwang.aliyun.com/" title="购买万网域名" target="_blank" rel="external">万网</a>，这里就不做详细说明了).域名解析如下：<br><img src="/images/hexo-4/wanwang.png" alt="coding网站"><br><strong>coding-pages绑定域名：</strong><br><img src="/images/hexo-4/coding-ww.png" alt="coding网站"><br><strong>github-pages绑定域名：</strong><br>在hexo根目录下的source/目录下需要创建一个CNAME,内容为：troylc.cc<br><img src="/images/hexo-4/github-CNAME.png" alt="github-CNAME"><br>然后在hexo根目录下执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo d -g</div></pre></td></tr></table></figure></p>
<p>过十几分钟后检测troylc.cc看到的解析是正确的，国内解析到Coding，国外解析到Github</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://shomy.top/2016/03/03/hexo-in-coding-github/" target="_blank" rel="external">hexo同时部署到coding(gitcafe)和github</a></p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程(二)-hexo-jacman主题优化]]></title>
      <url>http://www.troylc.cc/hexo/2016/05/31/Hexo-2.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>上一篇博文把我们的博客已经部署到了github pages服务上，别人可以通过网址来登陆我们的博客了，但是我们这时博客并不好看，怎么优化hexo博客，在Hexo下已经有很多人开发了各种主题给我们使用，我们只需要把他克隆过来，然后通过修改配置文件即可达到要的效果。那么我们应该怎么修改呢？</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="Hexo官网主题专栏"><a href="#Hexo官网主题专栏" class="headerlink" title="Hexo官网主题专栏"></a><a href="https://hexo.io/themes/" title="hexo主题专栏" target="_blank" rel="external">Hexo官网</a>主题专栏</h4><p><img src="/images/hexo-2/themes.png" alt="Hexo官网主题"><br>可以看到有很多主题给我们选，我们只要选择喜欢的主题点击进去，然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：jacman这个主题)<br><img src="/images/hexo-2/jacmangithub.png" alt="Hexo官网主题"></p>
<h4 id="克隆主题jacman"><a href="#克隆主题jacman" class="headerlink" title="克隆主题jacman"></a>克隆主题jacman</h4><p>再打开Hexo文件夹下的themes目录（F:\Blog\hexo\themes），右键Git Bash，在命令行输入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/wuchong/jacman.git themes/jacman</div></pre></td></tr></table></figure></p>
<p>等待下载完成</p>
<h4 id="启用主题jacman"><a href="#启用主题jacman" class="headerlink" title="启用主题jacman"></a>启用主题jacman</h4><p>修改你的博客根目录(F:\Blog\hexo)下的_config.yml配置文件中的theme属性，将其设置为jacman。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line"><span class="comment">#theme: landscape</span></div><div class="line">theme: jacman</div><div class="line">......</div></pre></td></tr></table></figure></p>
<h4 id="部署主题jacman"><a href="#部署主题jacman" class="headerlink" title="部署主题jacman"></a>部署主题jacman</h4><p>返回Hexo目录，右键Git Bash，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo s</div></pre></td></tr></table></figure></p>
<p>打开本地浏览器，输入<code>http://localhost:4000/</code> 即可看见我们的主题已经更换了<br><img src="/images/hexo-2/usejacman.png" alt="Hexo官网主题"></p>
<p>如果效果满意，将它部署到Github上;打开Hexo文件夹，右键Git Bash，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean   (必须要，不然有时因为缓存问题，服务器更新不了主题)</div><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure></p>
<p>打开自己github pages的主页(<code>https://xxxxx.github.io</code>)，即可看到修改后的效果</p>
<h4 id="优化hexo主配置"><a href="#优化hexo主配置" class="headerlink" title="优化hexo主配置"></a>优化hexo主配置</h4><p>修改你的博客根目录(F:\Blog\hexo)下的_config.yml配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site 网站</span></div><div class="line">title: troylc技术博客                   <span class="comment">#网站标题</span></div><div class="line">subtitle: 爱生活爱编程，一起来进步吧！  <span class="comment">#网站副标题</span></div><div class="line">description:  hello,every body!         <span class="comment">#网站描述</span></div><div class="line">author: troylc                          <span class="comment">#您的名字 </span></div><div class="line">language: zh-CN                         <span class="comment">#网站使用的语言</span></div><div class="line">timezone:                               <span class="comment">#网站时区。Hexo 默认使用您电脑的时区</span></div><div class="line"></div><div class="line"><span class="comment"># URL 网址</span></div><div class="line"><span class="comment">## 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/</span></div><div class="line">url: https://www.troylc.cc/</div><div class="line">root: /</div><div class="line"><span class="comment">#permalink: :year/:month/:day/:title/</span></div><div class="line">permalink: :category/:year/:month/:day/:title.html  <span class="comment">#生成文章的链接格式</span></div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"><span class="comment"># Directory 目录配置</span></div><div class="line">source_dir: <span class="built_in">source</span>              <span class="comment">#源文件夹，这个文件夹用来存放内容。</span></div><div class="line">public_dir: public              <span class="comment">#公共文件夹，这个文件夹用于存放生成的站点文件。</span></div><div class="line">tag_dir: tags                   <span class="comment">#标签文件夹</span></div><div class="line">archive_dir: archives           <span class="comment">#归档文件夹</span></div><div class="line">category_dir: categories        <span class="comment">#分类文件夹</span></div><div class="line">code_dir: downloads/code        <span class="comment">#nclude code 文件夹</span></div><div class="line">i18n_dir: :lang                 <span class="comment">#国际化（i18n）文件夹</span></div><div class="line">skip_render:                    <span class="comment">#跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</span></div><div class="line"></div><div class="line"><span class="comment"># Writing 文章</span></div><div class="line">new_post_name: :title.md        <span class="comment"># File name of new posts 新建文章默认文件名</span></div><div class="line">default_layout: post            <span class="comment"># 默认布局</span></div><div class="line">titlecase: <span class="literal">false</span>                <span class="comment"># Transform title into titlecase</span></div><div class="line">external_link: <span class="literal">true</span>             <span class="comment"># Open external links in new tab  在新标签中打开一个外部链接，默认为true</span></div><div class="line">filename_case: 0                <span class="comment">#转换文件名，1代表小写；2代表大写；默认为0，意思就是创建文章的时候，是否自动帮你转换文件名，默认就行，意义不大。</span></div><div class="line">render_drafts: <span class="literal">false</span>            <span class="comment">#是否渲染_drafts目录下的文章，默认为false</span></div><div class="line">post_asset_folder: <span class="literal">false</span>        <span class="comment">#启动 Asset 文件夹</span></div><div class="line">relative_link: <span class="literal">false</span>            <span class="comment">#把链接改为与根目录的相对位址，默认false</span></div><div class="line">future: <span class="literal">true</span>                    <span class="comment">#显示未来的文章，默认false</span></div><div class="line">highlight:    <span class="comment">#代码块的设置</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  line_number: <span class="literal">true</span></div><div class="line">  auto_detect: <span class="literal">false</span></div><div class="line">  tab_replace:</div><div class="line"><span class="comment"># 代码高亮主题</span></div><div class="line"><span class="comment"># available: default | night</span></div><div class="line">available: night</div><div class="line">highlight_theme: night  </div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag  分类和标签的设置</span></div><div class="line">default_category: uncategorized   <span class="comment">#默认分类         </span></div><div class="line">category_map:                     <span class="comment">#分类别名 category_map 是为了让url中尽量少出现中文，做的映射。如下配置</span></div><div class="line"><span class="comment">#    编程: programming</span></div><div class="line"><span class="comment">#    生活: life</span></div><div class="line"><span class="comment">#    其他: other</span></div><div class="line">tag_map:                          <span class="comment">#标签别名</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line">per_page: 10</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="comment">#theme: landscape</span></div><div class="line">theme: jacman  <span class="comment">#主题</span></div><div class="line">stylus: </div><div class="line">  compress: <span class="literal">true</span></div><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: </div><div class="line">      github: git@github.com:xxxx/xxxxx.github.io.git <span class="comment">#部署到github pages</span></div><div class="line">      coding: git@git.coding.net:xxxx/xxxx.git <span class="comment">#部署到coding pages</span></div><div class="line">  branch: master <span class="comment">#上传到git服务的主分支上</span></div><div class="line"></div><div class="line"><span class="comment"># 自动生成sitemap</span></div><div class="line"><span class="comment">#sitemap:</span></div><div class="line"><span class="comment">#path: sitemap.xml</span></div><div class="line"><span class="comment">#baidusitemap:</span></div><div class="line"><span class="comment">#path: baidusitemap.xml</span></div><div class="line"><span class="comment"># Others</span></div><div class="line">index_generator:</div><div class="line">  per_page: 5 <span class="comment">##首页默认10篇文章标题 如果值为0不分页</span></div><div class="line">archive_generator:</div><div class="line">    per_page: 0 <span class="comment">##归档页面默认10篇文章标题</span></div><div class="line">    yearly: <span class="literal">true</span>  <span class="comment">##生成年视图</span></div><div class="line">    monthly: <span class="literal">true</span> <span class="comment">##生成月视图</span></div><div class="line">tag_generator:</div><div class="line">    per_page: 0 <span class="comment">##标签分类页面默认10篇文章</span></div><div class="line">category_generator: </div><div class="line">    per_page: 0 <span class="comment">###分类页面默认10篇文章</span></div><div class="line">feed:</div><div class="line">    <span class="built_in">type</span>: atom <span class="comment">##feed类型 atom或者rss2</span></div><div class="line">    path: atom.xml <span class="comment">##feed路径</span></div><div class="line">    <span class="built_in">limit</span>: 20  <span class="comment">##feed文章最小数量</span></div></pre></td></tr></table></figure></p>
<h4 id="优化jacman主题配置"><a href="#优化jacman主题配置" class="headerlink" title="优化jacman主题配置"></a>优化jacman主题配置</h4><p>修改你的博客主题根目录(F:\Blog\hexo\themes\下的_config.yml配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##### Menu  #一级菜单</span></div><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  archives: /archives</div><div class="line">  life: /life</div><div class="line">  about: /about</div><div class="line"><span class="comment">## you can create `tags` and `categories` folders in `../source`.</span></div><div class="line"><span class="comment">## And create a `index.md` file in each of them.</span></div><div class="line"><span class="comment">## set `front-matter`as</span></div><div class="line"><span class="comment">## layout: tags (or categories)</span></div><div class="line"><span class="comment">## title: tags (or categories)</span></div><div class="line"><span class="comment">## ---</span></div><div class="line"></div><div class="line"><span class="comment">#### Widgets #内容区域的左侧内容</span></div><div class="line">widgets: </div><div class="line">- github-card</div><div class="line">- category</div><div class="line">- tag</div><div class="line">- hot</div><div class="line">- tagcloud</div><div class="line">- links</div><div class="line"><span class="comment">#- douban</span></div><div class="line">- weibo</div><div class="line">- rss</div><div class="line">  <span class="comment">## provide eight widgets:github-card,category,tag,rss,archive,tagcloud,links,weibo</span></div><div class="line">  </div><div class="line"><span class="comment">#### RSS </span></div><div class="line">rss: /atom.xml <span class="comment">## RSS address.</span></div><div class="line"></div><div class="line"><span class="comment">#### Image  #网站相关logo图片 及主题颜色</span></div><div class="line">imglogo:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>             <span class="comment">## display image logo true/false.</span></div><div class="line">  src: img/logo.png        <span class="comment">## `.svg` and `.png` are recommended,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">favicon: img/favicon.ico   <span class="comment">## size:32px*32px,`.ico` is recommended,please put image into the theme folder `/jacman/source/img`.     </span></div><div class="line">apple_icon: img/jacman.jpg <span class="comment">## size:114px*114px,please put image into the theme folder `/jacman/source/img`.</span></div><div class="line">author_img: img/author.jpg <span class="comment">## size:220px*220px.display author avatar picture.if don't want to display,please don't set this.</span></div><div class="line">banner_img: <span class="comment">#img/banner.jpg ## size:1920px*200px+. Banner Picture</span></div><div class="line"><span class="comment">### Theme Color #主题颜色</span></div><div class="line">theme_color:</div><div class="line">    theme: <span class="string">'#2ca6cb'</span>    <span class="comment">##the defaut theme color is blue</span></div><div class="line"></div><div class="line"><span class="comment"># 代码高亮主题</span></div><div class="line"><span class="comment"># available: default | night</span></div><div class="line">available: night</div><div class="line">highlight_theme: night</div><div class="line"></div><div class="line"><span class="comment">#### index post is expanding or not  该主题首页文章列表默认是全部展开，这里关闭，只展示标题和描述</span></div><div class="line">index:</div><div class="line">  expand: <span class="literal">false</span>   <span class="comment">## default is unexpanding,so you can only see the short description of each post.</span></div><div class="line">  excerpt_link: Read More  </div><div class="line"></div><div class="line">close_aside: <span class="literal">false</span>  <span class="comment">#close sidebar in post page if true</span></div><div class="line">mathjax: <span class="literal">false</span>      <span class="comment">#enable mathjax if true</span></div><div class="line"></div><div class="line"><span class="comment">### Creative Commons License Support, see http://creativecommons.org/ </span></div><div class="line"><span class="comment">### you can choose: by , by-nc , by-nc-nd , by-nc-sa , by-nd , by-sa , zero</span></div><div class="line">creative_commons: none</div><div class="line"></div><div class="line"><span class="comment">#### Author information  #作者信息</span></div><div class="line">author:</div><div class="line">  intro_line1:  <span class="string">"Hello ,I'm troylc Page in github."</span>    <span class="comment">## your introduction on the bottom of the page</span></div><div class="line">  intro_line2:  <span class="string">"This is my blog,believe it or not."</span>  <span class="comment">## the 2nd line</span></div><div class="line">  weibo_verifier: 0f81d6c8    <span class="comment">## e.g. 0f81d6c8 Your weibo-show widget verifier ,if you use weibo-show it is needed.</span></div><div class="line">  tsina: xxxxxx    <span class="comment">## e.g. xxxxxx  Your weibo ID,It will be used in share button.</span></div><div class="line">  weibo: xxxxxx     <span class="comment">## e.g. xxxxx or xxxxx for http://weibo.com/xxxxxx</span></div><div class="line">  douban:     <span class="comment">## e.g. wuchong1014 or your id for https://www.douban.com/people/wuchong1014</span></div><div class="line">  zhihu:      <span class="comment">## e.g. jark  for http://www.zhihu.com/people/jark</span></div><div class="line">  email:      <span class="comment">## e.g. imjark@gmail.com</span></div><div class="line">  twitter:    <span class="comment">## e.g. jarkwu for https://twitter.com/jarkwu</span></div><div class="line">  github: xxxxx     <span class="comment">## e.g. xxxxxx for https://github.com/xxxxx</span></div><div class="line">  facebook:   <span class="comment">## e.g. imjark for https://facebook.com/imjark</span></div><div class="line">  linkedin:   <span class="comment">## e.g. wuchong1014 for https://www.linkedin.com/in/wuchong1014</span></div><div class="line">  google_plus:    <span class="comment">## e.g. "111190881341800841449" for https://plus.google.com/u/0/111190881341800841449, the "" is needed!</span></div><div class="line">  stackoverflow:  <span class="comment">## e.g. 3222790 for http://stackoverflow.com/users/3222790/jark</span></div><div class="line"><span class="comment">## if you set them, the corresponding  share button will show on the footer</span></div><div class="line"></div><div class="line"><span class="comment">#### Toc</span></div><div class="line">toc:</div><div class="line">  article: <span class="literal">true</span>   <span class="comment">## show contents in article.</span></div><div class="line">  aside: <span class="literal">true</span>     <span class="comment">## show contents in aside.</span></div><div class="line"><span class="comment">## you can set both of the value to true of neither of them.</span></div><div class="line"><span class="comment">## if you don't want display contents in a specified post,you can modify `front-matter` and add `toc: false`.</span></div><div class="line"></div><div class="line"><span class="comment">#### Links</span></div><div class="line">links:</div><div class="line">  攻城狮: https://www.troylc.cc/，一个面向程序员交流分享的博客</div><div class="line">  troylc<span class="string">'s Blog: https://www.troylc.cc/</span></div><div class="line"></div><div class="line">#### Comment</div><div class="line">duoshuo_shortname: xxxx   ## e.g. xxxx   your duoshuo short name.</div><div class="line">disqus_shortname:     ## e.g. wuchong   your disqus short name.</div><div class="line"></div><div class="line"># You can visit https://leancloud.cn get AppID and AppKey.</div><div class="line">#leancloud_visitors:</div><div class="line">#  enable: true</div><div class="line">#  app_id: CqxYlI0bMsyMrs3ODUxr2mpV-gzGzoHsz # your app_id</div><div class="line">#  app_key eX5MnY61mQfgQx2aiXnajze5 # your app_key</div><div class="line"></div><div class="line">#### Share button 采用jiathis分享</div><div class="line">jiathis: </div><div class="line">  enable: true ## if you use jiathis as your share tool,the built-in share tool won't be display.</div><div class="line">  id: xxxxx   <span class="comment">## e.g. 1889330 your jiathis ID. </span></div><div class="line">  tsina: xxxxx2176287895 Your weibo id,It will be used <span class="keyword">in</span> share button.</div><div class="line"></div><div class="line"><span class="comment">#### Analytics</span></div><div class="line">google_analytics:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div><div class="line">  id:        <span class="comment">## e.g. UA-46321946-2 your google analytics ID.</span></div><div class="line">  site:      <span class="comment">## e.g. wuchong.me your google analytics site or set the value as auto.</span></div><div class="line"><span class="comment">## You MUST upgrade to Universal Analytics first!</span></div><div class="line"><span class="comment">## https://developers.google.com/analytics/devguides/collection/upgrade/?hl=zh_CN</span></div><div class="line">baidu_tongji:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  sitecode: b991924b21<span class="built_in">cd</span>080f0a0e761dd1a69288 <span class="comment">## e.g. b991924b21cd080f0a0e761dd1a69288 your baidu tongji site code</span></div><div class="line">cnzz_tongji:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div><div class="line">  siteid:    <span class="comment">## e.g. 1253575964 your cnzz tongji site id</span></div><div class="line"></div><div class="line"><span class="comment">#### Miscellaneous</span></div><div class="line">ShowCustomFont: <span class="literal">true</span>  <span class="comment">## you can change custom font in `variable.styl` and `font.styl` which in the theme folder `/jacman/source/css`.</span></div><div class="line">fancybox: <span class="literal">true</span>        <span class="comment">## if you use gallery post or want use fancybox please set the value to true.</span></div><div class="line">totop: <span class="literal">true</span>           <span class="comment">## if you want to scroll to top in every post set the value to true返回顶部按钮，totop。在博客右下脚显示一件返回顶部按钮</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#### Custom Search</span></div><div class="line">google_cse: </div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div><div class="line">  cx:   <span class="comment">## e.g. 018294693190868310296:abnhpuysycw your Custom Search ID.</span></div><div class="line"><span class="comment">## https://www.google.com/cse/ </span></div><div class="line"><span class="comment">## To enable the custom search You must create a "search" folder in '/source' and a "index.md" file</span></div><div class="line"><span class="comment">## set the 'front-matter' as</span></div><div class="line"><span class="comment">## layout: search </span></div><div class="line"><span class="comment">## title: search</span></div><div class="line"><span class="comment">## ---</span></div><div class="line">baidu_search:     <span class="comment">## http://zn.baidu.com/  极速体验版本http://zn.baidu.com/cse/wiki/index?category_id=25</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  id: troylc.cc  <span class="comment">## e.g. "783281470518440642"  for your baidu search id</span></div><div class="line">  site: http://zhannei.baidu.com/cse/site  <span class="comment">## your can change to your site instead of the default site</span></div><div class="line">  </div><div class="line">tinysou_search:     <span class="comment">## http://tinysou.com/</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div><div class="line">  id:  <span class="comment">## e.g. "4ac092ad8d749fdc6293" for your tiny search id</span></div><div class="line"></div><div class="line"><span class="comment">#swiftype搜索</span></div><div class="line">swift_search:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>注意：凡是有XXXXX处的，都要换成自己对应的账号。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/" title="如何使用Jacman主题" target="_blank" rel="external">如何使用Jacman主题</a><br><a href="https://github.com/wuchong/jacman" title="jacman-github" target="_blank" rel="external">jacman-github</a></p>
<p>后续针对具体的jacman的首页和文章页进行优化。持续更新中</p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo教程(一)-hexo环境搭建]]></title>
      <url>http://www.troylc.cc/hexo/2016/05/31/Hexo-1.html</url>
      <content type="html"><![CDATA[<h3 id="hexo-Github-Pages静态博客"><a href="#hexo-Github-Pages静态博客" class="headerlink" title="hexo-Github Pages静态博客"></a>hexo-Github Pages静态博客</h3><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>在 Windows7 64 环境下安装 Node.js 非常简单，仅须到<a href="https://nodejs.org/en/download/" title="nodejs官网" target="_blank" rel="external">官网</a>下载安装文件并执行即可完成安装<br><img src="/images/hexo-1/nodejs.jpg" alt="nodejs官网下载"></p>
<h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>从<a href="https://git-scm.com/download" title="git下载" target="_blank" rel="external">git官网</a>下载git并执行即可完成安装。<a href="http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html" title="windows安装过程" target="_blank" rel="external">安装过程</a>。安装完后，右击鼠标选择 git bash here<br><img src="/images/hexo-1/git.png" alt="git窗口"></p>
<ul>
<li>Git教程：<a href="http://git.oschina.net/progit/" title="git教程" target="_blank" rel="external">Pro Git（中文版）</a></li>
<li>git基本操作：</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>git init</td>
<td>git init 在目录中创建新的 Git 仓库。 你可以在任何时候、任何目录中这么做，完全是本地化的</td>
</tr>
<tr>
<td>git clone</td>
<td>使用 git clone 拷贝一个 Git 仓库到本地，让自己能够查看该项目，或者进行修改。</td>
</tr>
<tr>
<td>git add</td>
<td>git add 命令可将该文件添加到缓存</td>
</tr>
<tr>
<td>git status</td>
<td>git status 以查看在你上次提交之后是否有修改。加 -s 参数，以获得简短的结果输出。</td>
</tr>
<tr>
<td>git commit</td>
<td>执行 git commit 将缓存区内容添加到本地仓库中</td>
</tr>
<tr>
<td>git push</td>
<td>推送本地仓库的更新到远程仓库，语法git push [远程仓库名][本地分支][远程分支]</td>
</tr>
<tr>
<td>git pull</td>
<td>抓取远程仓库所有分支更新并合并到本地仓库  </td>
</tr>
</tbody>
</table>
<h4 id="hexo环境安装"><a href="#hexo环境安装" class="headerlink" title="hexo环境安装"></a>hexo环境安装</h4><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h5 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h5><p>桌面右键鼠标，点击Git Bash Here，输入npm命令即可安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div><div class="line">npm install hexo --save</div><div class="line"><span class="comment">#如果命令无法运行，可以尝试更换taobao的npm源，[http://npm.taobao.org](http://npm.taobao.org "淘宝npm源说明") ,请进入查看相关说明</span></div><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>
<h5 id="Hexo初始化配置"><a href="#Hexo初始化配置" class="headerlink" title="Hexo初始化配置"></a>Hexo初始化配置</h5><p>安装完成后，根据自己喜好建立目录（如F:\Blog\Hexo），直接进入F:\Blog\Hexo文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，执行以下操作。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>安装 Hexo 完成后，Hexo 将会在指定文件夹中新建所需要的文件。Hexo文件夹下的目录如下：<br><img src="/images/hexo-1/hexo-dir.png" alt="hexo初始化目录"><br>下面依次介绍上面各个文件或者目录的用途：</p>
<ul>
<li>_config.yml 站点配置文件，很多全局配置都在这个文件中。</li>
<li>package.json 应用数据。从它可以看出hexo版本信息，以及它所默认或者说依赖的一些组件。</li>
<li>scaffolds 模版文件。当你创建一篇新的文章时，hexo会依据模版文件进行创建，主要用在你想在每篇文章都添加一些共性的内容的情况下。</li>
<li>source 这个文件夹就是放文章的地方了，除了文章还有一些主要的资源，比如文章里的图片，文件等等东西。这个文件夹最好定期做一个备份，丢了它，整个站点就废了。</li>
<li>themes 主题文件夹。</li>
</ul>
<h5 id="安装Hexo插件"><a href="#安装Hexo插件" class="headerlink" title="安装Hexo插件"></a>安装Hexo插件</h5><p>如果想不出错，就将下面的插件都安装完。（如果用淘宝源，请把npm换成cnpm）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-deployer-heroku --save</div><div class="line">npm install hexo-deployer-rsync --save</div><div class="line">npm install hexo-deployer-openshift --save</div><div class="line">npm install hexo-renderer-marked@0.2 --save</div><div class="line">npm install hexo-renderer-stylus@0.2 --save</div><div class="line">npm install hexo-generator-feed@1 --save</div><div class="line">npm install hexo-generator-sitemap@1 --save</div></pre></td></tr></table></figure></p>
<h5 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h5><p>执行下面语句，执行完即可登录localhost:4000查看效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo server</div></pre></td></tr></table></figure></p>
<p>登录localhost:4000，即可看到本地的效果如下：<br><img src="/images/hexo-1/hexo-view.png" alt="hexo初始化目录"></p>
<h4 id="将博客部署Github-Pages上"><a href="#将博客部署Github-Pages上" class="headerlink" title="将博客部署Github Pages上"></a>将博客部署Github Pages上</h4><p>本地的博客已经搭建起来了，但是目前只可以通过本地服务查看我们的博客。现在需要做的就是把本地的博客发布到Github服务器上，通过Github Pages这个功能让别人也可以访问我们的博客，而Github Pages就帮我完成了这件事情。但是Github Pages的代码就是寄存在Github上面的。所以需要在Github上面创建一个新的项目。</p>
<h5 id="注册Github账户创建代码库"><a href="#注册Github账户创建代码库" class="headerlink" title="注册Github账户创建代码库"></a>注册Github账户创建代码库</h5><ol>
<li>访问<a href="http://www.github.com/" target="_blank" rel="external">Github</a>首页</li>
<li>点击右上角的 Sign Up，注册自己的账户</li>
<li>注册完登陆后，我们就创建一个我们自己的Github Pages项目。点击New repository.创建要点如下：<br><img src="/images/hexo-1/github-reposity.png" alt="github reposity"></li>
</ol>
<h5 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h5><ol>
<li>看看是否存在SSH密钥(keys)<br>首先，我们需要看看是否看看本机是否存在SSH keys,打开Git Bash,并运行:<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/. ssh</div></pre></td></tr></table></figure>
</li>
</ol>
<p>检查你本机用户home目录下是否存在.ssh目录<br>如果，不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。</p>
<ol>
<li><p>创建一对新的SSH密钥(keys)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#输入 ssh-keygen -t rsa -C "xxxxx@126.com" 这将按照你提供的邮箱地址，创建一对密钥</span></div><div class="line">$ ssh-keygen -t rsa -C <span class="string">"xxxxx@126.com"</span></div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/Administrator/.ssh/id_rsa): 回车，则将密钥按默认文件进行存储 c/Users/you/.ssh/github_rsa</div><div class="line">Created directory <span class="string">'/c/Users/Administrator/.ssh'</span>.</div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): 输入密码，</div><div class="line">Enter same passphrase again: 确认密码</div><div class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/Administrator/.ssh/id_rsa.</div><div class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/Administrator/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">SHA256:j9GCdXhgo+Up1af6XB/E9yZDv8XyZsZNXIA917q/72U xxxxx@126.com</div><div class="line">The key<span class="string">'s randomart image is:</span></div><div class="line">+---[RSA 2048]----+</div><div class="line">|        *.   o  .|</div><div class="line">|       * =. o + o|</div><div class="line">|      o = oo . = |</div><div class="line">|       + +.   = o|</div><div class="line">|      . S..  o *o|</div><div class="line">|        .=  . * O|</div><div class="line">|        .o.. . @E|</div><div class="line">|          o   .oX|</div><div class="line">|               *=|</div><div class="line">+----[SHA256]-----+</div></pre></td></tr></table></figure>
</li>
<li><p>在GitHub账户中添加你的公钥<br>直接用文本打开当前用户目录下的.ssh/id_rsa.pub文件，复制文件中的内容<br>登陆GitHub,进入你的Account Settings.<br><img src="/images/hexo-1/github-settings.png" alt="github settings"><br>选择New SSH Keys<br><img src="/images/hexo-1/github-sshkey.png" alt="github sshkey"><br>粘贴密钥，添加即可<br><img src="/images/hexo-1/ithub-SSH-OK.png" alt="github sshkey"></p>
</li>
<li>测试SSH密钥<br>可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
</ol>
<p>如果是下面的反馈，表示成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div><div class="line">The authenticity of host <span class="string">'github.com (192.30.252.123)'</span> can<span class="string">'t be established.</span></div><div class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes  不要紧张，输入yes就好，然后会看到：</div><div class="line">Warning: Permanently added 'github.com,192.30.252.123<span class="string">' (RSA) to the list of known hosts.</span></div><div class="line">Enter passphrase for key '/c/Users/Administrator/.ssh/id_rsa<span class="string">': 输入上面的创建SSHKEY的密码</span></div><div class="line">Hi troychn! You've successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure></p>
<p>如果出现以下问题，没有权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div><div class="line">The authenticity of host <span class="string">'github.com (192.30.252.120)'</span> can<span class="string">'t be established.</span></div><div class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added 'github.com,192.30.252.120<span class="string">' (RSA) to the list of known hosts.</span></div><div class="line">**Permission denied (publickey).**</div></pre></td></tr></table></figure></p>
<p>解决办法：<br>重新执行:第二步、创建一对新的SSH密钥(keys) 最好是输入密码,然后一步一步往下走，直至测试这步<br>如还有问题，请参考：<br>GitHub Help - <a href="https://help.github.com/articles/generating-an-ssh-key/" title="Generating an SSH key" target="_blank" rel="external">Generating SSH Keys</a><br>Error: <a href="https://help.github.com/articles/error-permission-denied-publickey/" title="Permission denied (publickey)" target="_blank" rel="external">Permission denied (publickey)</a></p>
<h5 id="将本地Hexo文件更新到Github库中"><a href="#将本地Hexo文件更新到Github库中" class="headerlink" title="将本地Hexo文件更新到Github库中"></a>将本地Hexo文件更新到Github库中</h5><p>登录Github打开上面创建的的项目 username.github.io 复制地址<br><img src="/images/hexo-1/cp-githubaddr.png" alt="github sshkey"><br>打开你一开始创建的Hexo文件夹（如F:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml文件<br><img src="/images/hexo-1/git-gitml_4.png" alt="github sshkey"><br>在配置文件里作如下修改，保存<br><img src="/images/hexo-1/cp-githubaddr-2.png" alt="github sshkey"><br>在Hexo文件夹下执行，右击打开git bash here 执行以下命令 ：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure>
<p>执行完之后会让你输入github的账号和密码，输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了。对应的地址是 username.github.io。<br><img src="/images/hexo-1/username-passw.png" alt="github sshkey"><br>在浏览器上输入自己的主页地址 （<a href="https://username.github.io/）username为你的github账号" target="_blank" rel="external">https://username.github.io/）username为你的github账号</a><br>在浏览器上输入即可看到我们自己的博客，别人电脑输入也可以哦。<br><img src="/images/hexo-1/view-cg.png" alt="github sshkey"></p>
<h4 id="开始编写一篇博客文章"><a href="#开始编写一篇博客文章" class="headerlink" title="开始编写一篇博客文章"></a>开始编写一篇博客文章</h4><h5 id="创建一个新文章："><a href="#创建一个新文章：" class="headerlink" title="创建一个新文章："></a>创建一个新文章：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>
<p>默认的文章布局是 post ，当然你可用提供自己的布局文件。你可以编辑_config.yml 修改默认布局。<br>Layout（布局）Hexo提供了3个默认布局： post 、 page 和 draft 。不同布局的文章会被保存到不同的目录，这取决于它的布局类型。 自定义布局保存到 source/_posts 文件夹。</p>
<table>
<thead>
<tr>
<th>布局</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>post</td>
<td>source/_posts</td>
</tr>
<tr>
<td>page</td>
<td>source</td>
</tr>
<tr>
<td>draft</td>
<td>source/_drafts</td>
</tr>
</tbody>
</table>
<p>对应三个布局，有三个相对应的模板文件(draft.md,page.md,post.md)在F:\Blog\hexo\scaffolds目录下,模板文件的格式设置以及默认值：</p>
<table>
<thead>
<tr>
<th>设置</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>layout</td>
<td>布局</td>
</tr>
<tr>
<td>title</td>
<td>文章标题</td>
</tr>
<tr>
<td>date</td>
<td>发布时间，默认为文件创建时间</td>
</tr>
<tr>
<td>updated</td>
<td>文件修改时间</td>
</tr>
<tr>
<td>comments</td>
<td>是否开启评论，默认为true</td>
</tr>
<tr>
<td>tags</td>
<td>文章标签</td>
</tr>
<tr>
<td>categories</td>
<td>文章所属分类</td>
</tr>
<tr>
<td>permalink</td>
<td>文章永久链接，一般不用写，默认就行</td>
</tr>
</tbody>
</table>
<p>如我这里的post.md的内容为：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">layout:  #文章布局 ---------#默认文章的模板-hexo new "title" 就会以这个模板创建文</div><div class="line">title: &#123;&#123; title &#125;&#125; #文章标题</div><div class="line">date: &#123;&#123; date &#125;&#125; #时间，一般不用改</div><div class="line">updated: &#123;&#123; date &#125;&#125;  # 更新时间</div><div class="line">comments:  #是否开启评论，默认为true</div><div class="line">categories:  #目录分类</div><div class="line">tags:  #标签，格式可以是[Hexo,总结]，中间用英文逗号分开 hexo new "text"  报错YAMLException: duplicated mapping key at line 6, column 1: 因为模板中有两个tags:</div><div class="line">permalink:  #文章永久链接，一般不用写，默认就行</div></pre></td></tr></table></figure></p>
<h5 id="创建Drafts（草稿）"><a href="#创建Drafts（草稿）" class="headerlink" title="创建Drafts（草稿）"></a>创建Drafts（草稿）</h5><p>前面hexo提到一个特殊的布局： draft 。 这种布局的帖子保存到source/_drafts 文件夹。你可以使用 publish 命令移动草稿到 source/_posts文件夹。 这个命令类似于你使用了 new 。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo publish [layout] &lt;title&gt;</div></pre></td></tr></table></figure></p>
<p>草稿默认不显示，你可以添加 –draft 选项或者设置 _config.yml 中的render_drafts 使hexo显示草稿。</p>
<p>到此利用github Pages 搭建hexo静态博客就成功了，下一篇准备美化我们的博客。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客折腾记]]></title>
      <url>http://www.troylc.cc/experience/2016/05/30/Hexo-0.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>作为一名一直从事技术方面的从业者，一直想拥有一个属于自己的一个空间。虽然之前也折腾过wordpress,但最终因为不免费而放弃。近年来github越来越流行，国内越来越多的人也对开源相当热情;hexo的出现，让想拥有自己博客想法的人成为可能。</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>以下是通过别人的想法给自己打气的一些话。</p>
<h4 id="为什么你应该（从现在开始就）写博客"><a href="#为什么你应该（从现在开始就）写博客" class="headerlink" title="为什么你应该（从现在开始就）写博客"></a>为什么你应该（从现在开始就）写博客</h4><p>用博客的形式来记录下你有价值的思考，会带来很多好处，却没有任何明显的坏处。认为写一个长期的有价值博客的最大的几点好处：</p>
<ul>
<li>能够交到很多志同道合的朋友：<br>在这个时代，对于生活中的绝大多数人来说，拓宽朋友圈子的途径几乎只有一个，通过网络，而如何在网络中寻找到气味相投的朋友，如何判断别人和自己是否有共同语言？显然，通过天天在SNS上碎碎念的那些日记是难以做到的。我佩服的一些朋友几乎全都是长期用博客记录想法的人，因此，和他们即便不打照面，也是心照不宣。即便素未谋面也能坐下来就聊得热火朝天。</li>
<li>书写是为了更好的思考<br>书写是对思维的备忘，书写是对思维的缓存，书写是对思维的缓存，书写是与别人的交流，有时候，语言自己也会思考；如果你逼着自己将一些不成熟的想法写下来，看着自己写的内容，试着进一步拓展它们，就有可能在理性的道路上走得很远，很远。</li>
<li>“教”是最好的“学”<br>如果一件事情你不能讲清楚，十有八九你还没有完全理解；为了让一个不明白的人做到明白，你必须要知道从明白到不明白他究竟需要掌握哪些概念，这就迫使我们对我们大脑中整个的知识体系来个寻根究底，把藏在水面之下的那些东西统统挖出来，把大脑中的那些我们知道、但不知道自己知道的潜在概念或假设（assumptions）都挖出来，把它们从内隐记忆拉扯到外显记忆中。因为只有完全知道、并知道自己知道一切来龙去脉的人，才能真正把一件事情讲得通通透透.<br>　　去教一个完全不懂的人，则是一种最最强大和彻底的反思途径——因为他没有任何预备的知识，所以要让他弄懂你所知道的，你就必须彻底反思你的知识体系，弄清这座大厦的根基在什么地方，弄清它的骨架在什么地方，一砖一瓦到底是怎么垒起来的，你不能自己站在11层上，然后假设你的读者站在第10层，指望着只要告诉他第11层有那些内容就让他明白。你的读者站在第一层，你必须知道你脚下踩着的另外10层到底是怎么构造的。这就迫使你对你所掌握的、或之前认为正确的那些东西作彻彻底底的、深刻的反思，你的受众越是不懂，你需要反思得就越深刻。</li>
<li>讨论是绝佳的反思<br>很多时候我们并不是有机会说给完全不懂的人听，更大的可能性是说给同领域有一定基础的人听，这个时候并不代表就不能促使反思了，实际上，你会发现，如果你公开你的想法，几乎总能看到与你持不同意见的人，然后你通过比较你和他的观念之间的差别，会发现你们在一开始的思路上就存在差异，差异从哪里来的？在进一步讨论中你们就会不断地迫使对方拿出更深层次的理由，这同样也是一种非常有效地促使自己反思的方法，在讨论的过程中双方的理由自然会变得越来越深入，越来越接近问题的本质，一些平时难以注意到的深层面的差异性就会逐渐浮现出来，你也就多了一次难得的机会去审视自己的思维中到底存放了哪些错误的信息</li>
<li>激励你去持续学习和思考<br>如果你没有持续学习和思考的习惯，你的博客很快就会没有内容可写，就只能整点碎碎念或者转载，然后你就会失去读者，然后你就会关掉博客，然后一旦关掉博客之后你也就死了写博客的心，然后就少了一条激励你去思考和总结的途径，然后你变得更不高兴总结和思考，然后…<br>打破这个死循环，就不要永久停止更新你的博客，就算你两个月，三个月都不写，只要你每篇都是写自己思考的产物，写有价值的东西，在互联网上，金子的确总是会发光的，因为有无数的信息聚合平台在期待这些有价值的内容，有搜索引擎为你的内容提供海量的潜在读者，有海量的人肉在手动挖掘和转载那些有价值的东西。我们所能做的最差的一个决策莫过于停止做一件没有任何坏处，却有一大堆好处的事情。</li>
<li>学会持之以恒地做一件事情<br>很多人在生活中容易觉得迷失，不知道想要做什么，是因为没有一件能够持续地做的事情，用俗话来说就是没有主心骨。用积极心理学的话来说就是没有一件能够创造流体验的事情，而书写自己的思想则是一件容易产生流体验的事情，在书写的时候，特别是理性地书写的时候，大脑逐渐进入推理分析模块，一切不愉快的情绪，烦躁感都会逐渐消隐下去。不过前提是你得开始，并且坚持过一开始的困难期，以后的一切便成了习惯成自然。</li>
<li>一个长期的价值博客是一份很好的简历<br>这里的“简历”并非是狭义上的求职简历，毕竟现在还没有到价值博客的时代，很多人写博客都是到处转载或者干脆碎碎念，正因此面试官未必拿个人博客当成了解一个人的更可靠窗口。这里的“简历”是指一个让别人了解自己的窗口，虽然我们未必做得到像罗永浩、Keso这样的博客，个人的影响力已经足以支撑出一份事业（牛博和5gme），但至少你会因此而结识更多的人，你的博客价值越高，你结识的人就越牛，跟牛人交流又会让你的眼界得到极大的开阔，打开一扇又一扇你原本不知道的门，于是你就变得更牛… 这是一个良性循环。</li>
</ul>
<h4 id="怎么做到长期写一个价值博客"><a href="#怎么做到长期写一个价值博客" class="headerlink" title="怎么做到长期写一个价值博客"></a>怎么做到长期写一个价值博客</h4><p>　　一开始的时候你是因为要写博客而去使劲地思考和总结，指望给出令人眼睛一亮的东西，到了后来，就变成了因为你习惯了思考和总结，因为你意识到书写是更好的思考，你就必须使你的想法成为文字。至此本和末就会各归原位，不再颠倒。<br>　　怎样做到长期写一个价值博客？也许有人会给出很多有趣有用的小技巧来提供动机和激励，譬如如何做SEO，如何鼓励读者留言等等，但是这些我都不想说，我只想说最最重要的，那就是：<br>　　让你自己成为一个持续学习和思考的人，并只写你真正思考和总结之后的产物，其他一切就会随之而来。<br><em><code>意志力很大程度上来源于有正确的方法，而非天生。</code></em> </p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://kb.cnblogs.com/page/517038/" title="为什么你应该（从现在开始就）写博客" target="_blank" rel="external">牛人是怎么思考写博客的</a></p>
]]></content>
    </entry>
    
  
  
</search>
